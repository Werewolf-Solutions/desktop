{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Accounting/Accounting.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, InputLabel, MenuItem, Select, FormControl, Button, Typography } from '@material-ui/core';\nimport { format, compareAsc } from 'date-fns';\nimport AddBudgetDialog from './AddBudgetDialog';\nimport FixedCostsDialog from './FixedCosts/FixedCostsDialog';\nimport VariableCostsDialog from './VariableCosts/VariableCostsDialog';\nimport FutureCostsDialog from './FutureCosts/FutureCostsDialog';\nimport IncomesDialog from './Incomes/IncomesDialog';\nimport BankAccountsDialog from './BankAccounts/BankAccountsDialog';\nimport accounting from '../../funcs/accounting';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nexport default function Accounting(props) {\n  _s();\n\n  const {\n    user\n  } = props;\n  const classes = useStyles();\n  const [addBudgetDialog, setAddBudgetDialog] = React.useState(false);\n  const [fixedCostsDialog, setFixedCostsDialog] = React.useState(false);\n  const [variableCostsDialog, setVariableCostsDialog] = React.useState(false);\n  const [futureCostsDialog, setFutureCostsDialog] = React.useState(false);\n  const [incomesDialog, setIncomesDialog] = React.useState(false);\n  const [bankAccountsDialog, setBankAccountsDialog] = React.useState(false);\n  const [state, setState] = React.useState();\n  const [addFixedCostDialog, setAddFixedCostDialog] = React.useState(false);\n  const [addVariableCostDialog, setAddVariableCostDialog] = React.useState(false);\n  const [addFutureCostDialog, setAddFutureCostDialog] = React.useState(false);\n  const [addIncomeDialog, setAddIncomeDialog] = React.useState(false);\n  const [addBankAccountDialog, setAddBankAccountDialog] = React.useState(false);\n  const [date, setDate] = React.useState(format(new Date(), 'yyyy-MM-dd'));\n\n  const selectDate = e => {\n    setDate(e.target.value);\n  };\n\n  const handleAddFixedCostDialog = () => {\n    setAddFixedCostDialog(!addFixedCostDialog);\n  };\n\n  const handleAddVariableCostDialog = () => {\n    setAddVariableCostDialog(!addVariableCostDialog);\n  };\n\n  const handleAddFutureCostDialog = () => {\n    setAddFutureCostDialog(!addFutureCostDialog);\n  };\n\n  const handleAddIncomeDialog = () => {\n    setAddIncomeDialog(!addIncomeDialog);\n  };\n\n  const handleAddBankAccountDialog = () => {\n    setAddBankAccountDialog(!addBankAccountDialog);\n  };\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleAddBudgetDialog = () => {\n    setAddBudgetDialog(!addBudgetDialog);\n  };\n\n  const handleFixedCostsDialog = () => {\n    setFixedCostsDialog(!fixedCostsDialog);\n  };\n\n  const handleVariableCostsDialog = () => {\n    setVariableCostsDialog(!variableCostsDialog);\n  };\n\n  const handleFutureCostsDialog = () => {\n    setFutureCostsDialog(!futureCostsDialog);\n  };\n\n  const handleIncomesDialog = () => {\n    setIncomesDialog(!incomesDialog);\n  };\n\n  const handleBankAccountsDialog = () => {\n    setBankAccountsDialog(!bankAccountsDialog);\n  };\n\n  const addBudget = () => {\n    let {\n      budgets,\n      success\n    } = accounting.addBudget(state.name).then(() => {\n      props.authUser();\n      handleAddBudgetDialog();\n    });\n  };\n\n  const deleteBudget = budget => {\n    let {\n      budgets,\n      success\n    } = accounting.deleteBudget(budget._id).then(() => {\n      props.authUser();\n    });\n  };\n\n  const addFixedCost = async () => {\n    const {\n      due_day,\n      amount,\n      from,\n      to,\n      frequency,\n      notes\n    } = state;\n    let fixed_cost = {\n      due_day,\n      amount,\n      from,\n      to,\n      frequency,\n      notes\n    };\n    await accounting.addFixedCost(props.budget, fixed_cost);\n    props.update(props.budget);\n    handleAddFixedCostDialog();\n  };\n\n  const deleteFixedCost = async fixed_cost_id => {\n    for (let i = 0; i < fixed_cost_id.length; i++) {\n      await accounting.deleteFixedCost(props.budget, fixed_cost_id[i]);\n      props.update(props.budget);\n    }\n  };\n\n  const addVariableCost = async () => {\n    const {\n      amount,\n      from,\n      to,\n      notes\n    } = state;\n    let variable_cost = {\n      date: date,\n      amount,\n      from,\n      to,\n      notes\n    };\n    console.log(date);\n    await accounting.addVariableCost(props.budget, variable_cost);\n    props.update(props.budget);\n    handleAddVariableCostDialog();\n  };\n\n  const deleteVariableCost = async variable_cost_id => {\n    for (let i = 0; i < variable_cost_id.length; i++) {\n      await accounting.deleteVariableCost(props.budget, variable_cost_id[i]);\n      props.update(props.budget);\n    }\n  };\n\n  const addFutureCost = async () => {\n    const {\n      amount,\n      from,\n      to,\n      notes\n    } = state;\n    let future_cost = {\n      date: date,\n      amount,\n      from,\n      to,\n      notes\n    };\n    await accounting.addFutureCost(props.budget, future_cost);\n    props.update(props.budget);\n    handleAddFutureCostDialog();\n  };\n\n  const deleteFutureCost = async future_cost_id => {\n    for (let i = 0; i < future_cost_id.length; i++) {\n      await accounting.deleteFutureCost(props.budget, future_cost_id[i]);\n      props.update(props.budget);\n    }\n  };\n\n  const addIncome = async () => {\n    const {\n      amount,\n      from,\n      to,\n      notes\n    } = state;\n    let income = {\n      date: date,\n      amount,\n      from,\n      to,\n      notes\n    };\n    await accounting.addIncome(props.budget, income);\n    props.update(props.budget);\n    handleAddIncomeDialog();\n  };\n\n  const deleteIncome = async income_id => {\n    for (let i = 0; i < income_id.length; i++) {\n      await accounting.deleteIncome(props.budget, income_id[i]);\n      props.update(props.budget);\n    }\n  };\n\n  const addBankAccount = async () => {\n    const {\n      amount,\n      from,\n      bank_name,\n      notes\n    } = state;\n    let bank_account = {\n      date: date,\n      amount,\n      from,\n      bank_name,\n      notes\n    };\n    await accounting.addBankAccount(props.budget, bank_account);\n    props.update(props.budget);\n    handleAddBankAccountDialog();\n  };\n\n  const deleteBankAccount = async bank_account_id => {\n    for (let i = 0; i < bank_account_id.length; i++) {\n      await accounting.deleteBankAccount(props.budget, bank_account_id[i]);\n      props.update(props.budget);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddBudgetDialog, {\n      open: addBudgetDialog,\n      handleChange: handleChange,\n      addBudget: addBudget,\n      onClose: handleAddBudgetDialog,\n      authUser: props.authUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FixedCostsDialog, {\n      open: fixedCostsDialog,\n      onClose: handleFixedCostsDialog,\n      budget: props.budget,\n      addFixedCost: addFixedCost,\n      handleChange: handleChange,\n      authUser: props.authUser,\n      addFixedCostDialog: addFixedCostDialog,\n      handleAddFixedCostDialog: handleAddFixedCostDialog,\n      deleteFixedCost: deleteFixedCost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VariableCostsDialog, {\n      open: variableCostsDialog,\n      onClose: handleVariableCostsDialog,\n      budget: props.budget,\n      addVariableCost: addVariableCost,\n      handleChange: handleChange,\n      authUser: props.authUser,\n      addVariableCostDialog: addVariableCostDialog,\n      handleAddVariableCostDialog: handleAddVariableCostDialog,\n      deleteVariableCost: deleteVariableCost,\n      date: date,\n      selectDate: selectDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FutureCostsDialog, {\n      open: futureCostsDialog,\n      onClose: handleFutureCostsDialog,\n      budget: props.budget,\n      addFutureCost: addFutureCost,\n      handleChange: handleChange,\n      authUser: props.authUser,\n      addFutureCostDialog: addFutureCostDialog,\n      handleAddFutureCostDialog: handleAddFutureCostDialog,\n      deleteFutureCost: deleteFutureCost,\n      date: date,\n      selectDate: selectDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IncomesDialog, {\n      open: incomesDialog,\n      onClose: handleIncomesDialog,\n      budget: props.budget,\n      addIncome: addIncome,\n      handleChange: handleChange,\n      authUser: props.authUser,\n      addIncomeDialog: addIncomeDialog,\n      handleAddIncomeDialog: handleAddIncomeDialog,\n      deleteIncome: deleteIncome,\n      date: date,\n      selectDate: selectDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BankAccountsDialog, {\n      open: bankAccountsDialog,\n      onClose: handleBankAccountsDialog,\n      budget: props.budget,\n      addBankAccount: addBankAccount,\n      handleChange: handleChange,\n      authUser: props.authUser,\n      addBankAccountDialog: addBankAccountDialog,\n      handleAddBankAccountDialog: handleAddBankAccountDialog,\n      deleteBankAccount: deleteBankAccount,\n      date: date,\n      selectDate: selectDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: \"select-budget\",\n              value: props.budgetName,\n              onChange: props.handleSelectBudget,\n              children: user.budgets.map(budget => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: budget,\n                children: budget.name\n              }, budget._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddBudgetDialog,\n            children: \"Add a budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), props.budget ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => deleteBudget(props.budget),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 27\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: \"Select working days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"column\",\n          children: props.budget ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              spacing: 1,\n              direction: \"column\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                direction: \"row\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [\"To earn: \", props.budget.to_earn]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [\"To save: \", props.budget.to_save]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [\"Net worth: \", props.budget.net_worth]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [\"Net worth needed: \", props.budget.net_worth_needed]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [\"Net worth missing: \", props.budget.net_worth_missing]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleFixedCostsDialog,\n                children: [\"Fixed Costs \", '£ total']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleVariableCostsDialog,\n                children: [\"Variable Costs \", '£ total']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleFutureCostsDialog,\n                children: [\"Future Costs \", '£ total']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleIncomesDialog,\n                children: [\"Incomes \", '£ total']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleBankAccountsDialog,\n                children: [\"Bank accounts \", '£ total']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Select a budget and working days to see details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading . . .\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Accounting, \"1oXdzzwUzKDidHqm/PTYRFMCnuc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Accounting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accounting\");","map":{"version":3,"sources":["/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Accounting/Accounting.js"],"names":["React","makeStyles","Grid","InputLabel","MenuItem","Select","FormControl","Button","Typography","format","compareAsc","AddBudgetDialog","FixedCostsDialog","VariableCostsDialog","FutureCostsDialog","IncomesDialog","BankAccountsDialog","accounting","useStyles","theme","formControl","margin","spacing","minWidth","Accounting","props","user","classes","addBudgetDialog","setAddBudgetDialog","useState","fixedCostsDialog","setFixedCostsDialog","variableCostsDialog","setVariableCostsDialog","futureCostsDialog","setFutureCostsDialog","incomesDialog","setIncomesDialog","bankAccountsDialog","setBankAccountsDialog","state","setState","addFixedCostDialog","setAddFixedCostDialog","addVariableCostDialog","setAddVariableCostDialog","addFutureCostDialog","setAddFutureCostDialog","addIncomeDialog","setAddIncomeDialog","addBankAccountDialog","setAddBankAccountDialog","date","setDate","Date","selectDate","e","target","value","handleAddFixedCostDialog","handleAddVariableCostDialog","handleAddFutureCostDialog","handleAddIncomeDialog","handleAddBankAccountDialog","handleChange","id","handleAddBudgetDialog","handleFixedCostsDialog","handleVariableCostsDialog","handleFutureCostsDialog","handleIncomesDialog","handleBankAccountsDialog","addBudget","budgets","success","name","then","authUser","deleteBudget","budget","_id","addFixedCost","due_day","amount","from","to","frequency","notes","fixed_cost","update","deleteFixedCost","fixed_cost_id","i","length","addVariableCost","variable_cost","console","log","deleteVariableCost","variable_cost_id","addFutureCost","future_cost","deleteFutureCost","future_cost_id","addIncome","income","deleteIncome","income_id","addBankAccount","bank_name","bank_account","deleteBankAccount","bank_account_id","budgetName","handleSelectBudget","map","to_earn","to_save","net_worth","net_worth_needed","net_worth_missing"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACIC,IADJ,EAEIC,UAFJ,EAGIC,QAHJ,EAIIC,MAJJ,EAKIC,WALJ,EAMIC,MANJ,EAOIC,UAPJ,QAQO,mBARP;AASA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,UAAnC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,MAAMC,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACrCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAETC,IAAAA,QAAQ,EAAE;AAFD;AADwB,CAAZ,CAAD,CAA5B;AAOA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AAEA,QAAME,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwC7B,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAA9C;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0ChC,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAAhD;AACA,QAAM,CAACG,mBAAD,EAAsBC,sBAAtB,IAAgDlC,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAAtD;AACA,QAAM,CAACK,iBAAD,EAAoBC,oBAApB,IAA4CpC,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAAlD;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCtC,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAA1C;AACA,QAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CxC,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAApD;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoB1C,KAAK,CAAC8B,QAAN,EAA1B;AACA,QAAM,CAACa,kBAAD,EAAqBC,qBAArB,IAA8C5C,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAApD;AACA,QAAM,CAACe,qBAAD,EAAwBC,wBAAxB,IAAoD9C,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAA1D;AACA,QAAM,CAACiB,mBAAD,EAAsBC,sBAAtB,IAAgDhD,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAAtD;AACA,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwClD,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAA9C;AACA,QAAM,CAACqB,oBAAD,EAAuBC,uBAAvB,IAAkDpD,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAAxD;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBtD,KAAK,CAAC8B,QAAN,CAAerB,MAAM,CAAC,IAAI8C,IAAJ,EAAD,EAAa,YAAb,CAArB,CAAxB;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIA,QAAMC,wBAAwB,GAAG,MAAM;AACnChB,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACH,GAFD;;AAIA,QAAMkB,2BAA2B,GAAG,MAAM;AACtCf,IAAAA,wBAAwB,CAAC,CAACD,qBAAF,CAAxB;AACH,GAFD;;AAIA,QAAMiB,yBAAyB,GAAG,MAAM;AACpCd,IAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACH,GAFD;;AAIA,QAAMgB,qBAAqB,GAAG,MAAM;AAChCb,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACH,GAFD;;AAIA,QAAMe,0BAA0B,GAAG,MAAM;AACrCZ,IAAAA,uBAAuB,CAAC,CAACD,oBAAF,CAAvB;AACH,GAFD;;AAIA,QAAMc,YAAY,GAAIR,CAAD,IAAO;AACxBf,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAW,OAACgB,CAAC,CAACC,MAAF,CAASQ,EAAV,GAAeT,CAAC,CAACC,MAAF,CAASC;AAAnC,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMQ,qBAAqB,GAAG,MAAM;AAChCtC,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACH,GAFD;;AAIA,QAAMwC,sBAAsB,GAAG,MAAM;AACjCpC,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACH,GAFD;;AAIA,QAAMsC,yBAAyB,GAAG,MAAM;AACpCnC,IAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACH,GAFD;;AAIA,QAAMqC,uBAAuB,GAAG,MAAM;AAClClC,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACH,GAFD;;AAIA,QAAMoC,mBAAmB,GAAG,MAAM;AAC9BjC,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACH,GAFD;;AAIA,QAAMmC,wBAAwB,GAAG,MAAM;AACnChC,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACH,GAFD;;AAIA,QAAMkC,SAAS,GAAG,MAAM;AACpB,QAAI;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuB1D,UAAU,CAACwD,SAAX,CAAqBhC,KAAK,CAACmC,IAA3B,EAAiCC,IAAjC,CAAsC,MAAM;AACnEpD,MAAAA,KAAK,CAACqD,QAAN;AACAX,MAAAA,qBAAqB;AACxB,KAH0B,CAA3B;AAIH,GALD;;AAOA,QAAMY,YAAY,GAAIC,MAAD,IAAY;AAC7B,QAAI;AAAEN,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuB1D,UAAU,CAAC8D,YAAX,CAAwBC,MAAM,CAACC,GAA/B,EAAoCJ,IAApC,CAAyC,MAAM;AACtEpD,MAAAA,KAAK,CAACqD,QAAN;AACH,KAF0B,CAA3B;AAGH,GAJD;;AAMA,QAAMI,YAAY,GAAG,YAAY;AAC7B,UAAM;AACFC,MAAAA,OADE;AAEFC,MAAAA,MAFE;AAGFC,MAAAA,IAHE;AAIFC,MAAAA,EAJE;AAKFC,MAAAA,SALE;AAMFC,MAAAA;AANE,QAOF/C,KAPJ;AAQA,QAAIgD,UAAU,GAAG;AACbN,MAAAA,OADa;AAEbC,MAAAA,MAFa;AAGbC,MAAAA,IAHa;AAIbC,MAAAA,EAJa;AAKbC,MAAAA,SALa;AAMbC,MAAAA;AANa,KAAjB;AAQA,UAAMvE,UAAU,CAACiE,YAAX,CAAwBzD,KAAK,CAACuD,MAA9B,EAAsCS,UAAtC,CAAN;AACAhE,IAAAA,KAAK,CAACiE,MAAN,CAAajE,KAAK,CAACuD,MAAnB;AACApB,IAAAA,wBAAwB;AAC3B,GApBD;;AAsBA,QAAM+B,eAAe,GAAG,MAAOC,aAAP,IAAyB;AAC7C,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,aAAa,CAACE,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,YAAM5E,UAAU,CAAC0E,eAAX,CAA2BlE,KAAK,CAACuD,MAAjC,EAAyCY,aAAa,CAACC,CAAD,CAAtD,CAAN;AACApE,MAAAA,KAAK,CAACiE,MAAN,CAAajE,KAAK,CAACuD,MAAnB;AACH;AACJ,GALD;;AAOA,QAAMe,eAAe,GAAG,YAAY;AAChC,UAAM;AACFX,MAAAA,MADE;AAEFC,MAAAA,IAFE;AAGFC,MAAAA,EAHE;AAIFE,MAAAA;AAJE,QAKF/C,KALJ;AAMA,QAAIuD,aAAa,GAAG;AAChB3C,MAAAA,IAAI,EAAEA,IADU;AAEhB+B,MAAAA,MAFgB;AAGhBC,MAAAA,IAHgB;AAIhBC,MAAAA,EAJgB;AAKhBE,MAAAA;AALgB,KAApB;AAOAS,IAAAA,OAAO,CAACC,GAAR,CAAY7C,IAAZ;AACA,UAAMpC,UAAU,CAAC8E,eAAX,CAA2BtE,KAAK,CAACuD,MAAjC,EAAyCgB,aAAzC,CAAN;AACAvE,IAAAA,KAAK,CAACiE,MAAN,CAAajE,KAAK,CAACuD,MAAnB;AACAnB,IAAAA,2BAA2B;AAC9B,GAlBD;;AAoBA,QAAMsC,kBAAkB,GAAG,MAAOC,gBAAP,IAA4B;AACnD,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,gBAAgB,CAACN,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,YAAM5E,UAAU,CAACkF,kBAAX,CAA8B1E,KAAK,CAACuD,MAApC,EAA4CoB,gBAAgB,CAACP,CAAD,CAA5D,CAAN;AACApE,MAAAA,KAAK,CAACiE,MAAN,CAAajE,KAAK,CAACuD,MAAnB;AACH;AACJ,GALD;;AAOA,QAAMqB,aAAa,GAAG,YAAY;AAC9B,UAAM;AACFjB,MAAAA,MADE;AAEFC,MAAAA,IAFE;AAGFC,MAAAA,EAHE;AAIFE,MAAAA;AAJE,QAKF/C,KALJ;AAMA,QAAI6D,WAAW,GAAG;AACdjD,MAAAA,IAAI,EAAEA,IADQ;AAEd+B,MAAAA,MAFc;AAGdC,MAAAA,IAHc;AAIdC,MAAAA,EAJc;AAKdE,MAAAA;AALc,KAAlB;AAOA,UAAMvE,UAAU,CAACoF,aAAX,CAAyB5E,KAAK,CAACuD,MAA/B,EAAuCsB,WAAvC,CAAN;AACA7E,IAAAA,KAAK,CAACiE,MAAN,CAAajE,KAAK,CAACuD,MAAnB;AACAlB,IAAAA,yBAAyB;AAC5B,GAjBD;;AAmBA,QAAMyC,gBAAgB,GAAG,MAAOC,cAAP,IAA0B;AAC/C,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,cAAc,CAACV,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,YAAM5E,UAAU,CAACsF,gBAAX,CAA4B9E,KAAK,CAACuD,MAAlC,EAA0CwB,cAAc,CAACX,CAAD,CAAxD,CAAN;AACApE,MAAAA,KAAK,CAACiE,MAAN,CAAajE,KAAK,CAACuD,MAAnB;AACH;AACJ,GALD;;AAOA,QAAMyB,SAAS,GAAG,YAAY;AAC1B,UAAM;AACFrB,MAAAA,MADE;AAEFC,MAAAA,IAFE;AAGFC,MAAAA,EAHE;AAIFE,MAAAA;AAJE,QAKF/C,KALJ;AAMA,QAAIiE,MAAM,GAAG;AACTrD,MAAAA,IAAI,EAAEA,IADG;AAET+B,MAAAA,MAFS;AAGTC,MAAAA,IAHS;AAITC,MAAAA,EAJS;AAKTE,MAAAA;AALS,KAAb;AAOA,UAAMvE,UAAU,CAACwF,SAAX,CAAqBhF,KAAK,CAACuD,MAA3B,EAAmC0B,MAAnC,CAAN;AACAjF,IAAAA,KAAK,CAACiE,MAAN,CAAajE,KAAK,CAACuD,MAAnB;AACAjB,IAAAA,qBAAqB;AACxB,GAjBD;;AAmBA,QAAM4C,YAAY,GAAG,MAAOC,SAAP,IAAqB;AACtC,SAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGe,SAAS,CAACd,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,YAAM5E,UAAU,CAAC0F,YAAX,CAAwBlF,KAAK,CAACuD,MAA9B,EAAsC4B,SAAS,CAACf,CAAD,CAA/C,CAAN;AACApE,MAAAA,KAAK,CAACiE,MAAN,CAAajE,KAAK,CAACuD,MAAnB;AACH;AACJ,GALD;;AAOA,QAAM6B,cAAc,GAAG,YAAY;AAC/B,UAAM;AACFzB,MAAAA,MADE;AAEFC,MAAAA,IAFE;AAGFyB,MAAAA,SAHE;AAIFtB,MAAAA;AAJE,QAKF/C,KALJ;AAMA,QAAIsE,YAAY,GAAG;AACf1D,MAAAA,IAAI,EAAEA,IADS;AAEf+B,MAAAA,MAFe;AAGfC,MAAAA,IAHe;AAIfyB,MAAAA,SAJe;AAKftB,MAAAA;AALe,KAAnB;AAOA,UAAMvE,UAAU,CAAC4F,cAAX,CAA0BpF,KAAK,CAACuD,MAAhC,EAAwC+B,YAAxC,CAAN;AACAtF,IAAAA,KAAK,CAACiE,MAAN,CAAajE,KAAK,CAACuD,MAAnB;AACAhB,IAAAA,0BAA0B;AAC7B,GAjBD;;AAmBA,QAAMgD,iBAAiB,GAAG,MAAOC,eAAP,IAA2B;AACjD,SAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,eAAe,CAACnB,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,YAAM5E,UAAU,CAAC+F,iBAAX,CAA6BvF,KAAK,CAACuD,MAAnC,EAA2CiC,eAAe,CAACpB,CAAD,CAA1D,CAAN;AACApE,MAAAA,KAAK,CAACiE,MAAN,CAAajE,KAAK,CAACuD,MAAnB;AACH;AACJ,GALD;;AAOA,sBACI;AAAA,4BACI,QAAC,eAAD;AACI,MAAA,IAAI,EAAEpD,eADV;AAEI,MAAA,YAAY,EAAEqC,YAFlB;AAGI,MAAA,SAAS,EAAEQ,SAHf;AAII,MAAA,OAAO,EAAEN,qBAJb;AAKI,MAAA,QAAQ,EAAE1C,KAAK,CAACqD;AALpB;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,gBAAD;AACI,MAAA,IAAI,EAAE/C,gBADV;AAEI,MAAA,OAAO,EAAEqC,sBAFb;AAGI,MAAA,MAAM,EAAE3C,KAAK,CAACuD,MAHlB;AAII,MAAA,YAAY,EAAEE,YAJlB;AAKI,MAAA,YAAY,EAAEjB,YALlB;AAMI,MAAA,QAAQ,EAAExC,KAAK,CAACqD,QANpB;AAOI,MAAA,kBAAkB,EAAEnC,kBAPxB;AAQI,MAAA,wBAAwB,EAAEiB,wBAR9B;AASI,MAAA,eAAe,EAAE+B;AATrB;AAAA;AAAA;AAAA;AAAA,YARJ,eAmBI,QAAC,mBAAD;AACI,MAAA,IAAI,EAAE1D,mBADV;AAEI,MAAA,OAAO,EAAEoC,yBAFb;AAGI,MAAA,MAAM,EAAE5C,KAAK,CAACuD,MAHlB;AAII,MAAA,eAAe,EAAEe,eAJrB;AAKI,MAAA,YAAY,EAAE9B,YALlB;AAMI,MAAA,QAAQ,EAAExC,KAAK,CAACqD,QANpB;AAOI,MAAA,qBAAqB,EAAEjC,qBAP3B;AAQI,MAAA,2BAA2B,EAAEgB,2BARjC;AASI,MAAA,kBAAkB,EAAEsC,kBATxB;AAUI,MAAA,IAAI,EAAE9C,IAVV;AAWI,MAAA,UAAU,EAAEG;AAXhB;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAgCI,QAAC,iBAAD;AACI,MAAA,IAAI,EAAErB,iBADV;AAEI,MAAA,OAAO,EAAEmC,uBAFb;AAGI,MAAA,MAAM,EAAE7C,KAAK,CAACuD,MAHlB;AAII,MAAA,aAAa,EAAEqB,aAJnB;AAKI,MAAA,YAAY,EAAEpC,YALlB;AAMI,MAAA,QAAQ,EAAExC,KAAK,CAACqD,QANpB;AAOI,MAAA,mBAAmB,EAAE/B,mBAPzB;AAQI,MAAA,yBAAyB,EAAEe,yBAR/B;AASI,MAAA,gBAAgB,EAAEyC,gBATtB;AAUI,MAAA,IAAI,EAAElD,IAVV;AAWI,MAAA,UAAU,EAAEG;AAXhB;AAAA;AAAA;AAAA;AAAA,YAhCJ,eA6CI,QAAC,aAAD;AACI,MAAA,IAAI,EAAEnB,aADV;AAEI,MAAA,OAAO,EAAEkC,mBAFb;AAGI,MAAA,MAAM,EAAE9C,KAAK,CAACuD,MAHlB;AAII,MAAA,SAAS,EAAEyB,SAJf;AAKI,MAAA,YAAY,EAAExC,YALlB;AAMI,MAAA,QAAQ,EAAExC,KAAK,CAACqD,QANpB;AAOI,MAAA,eAAe,EAAE7B,eAPrB;AAQI,MAAA,qBAAqB,EAAEc,qBAR3B;AASI,MAAA,YAAY,EAAE4C,YATlB;AAUI,MAAA,IAAI,EAAEtD,IAVV;AAWI,MAAA,UAAU,EAAEG;AAXhB;AAAA;AAAA;AAAA;AAAA,YA7CJ,eA0DI,QAAC,kBAAD;AACI,MAAA,IAAI,EAAEjB,kBADV;AAEI,MAAA,OAAO,EAAEiC,wBAFb;AAGI,MAAA,MAAM,EAAE/C,KAAK,CAACuD,MAHlB;AAII,MAAA,cAAc,EAAE6B,cAJpB;AAKI,MAAA,YAAY,EAAE5C,YALlB;AAMI,MAAA,QAAQ,EAAExC,KAAK,CAACqD,QANpB;AAOI,MAAA,oBAAoB,EAAE3B,oBAP1B;AAQI,MAAA,0BAA0B,EAAEa,0BARhC;AASI,MAAA,iBAAiB,EAAEgD,iBATvB;AAUI,MAAA,IAAI,EAAE3D,IAVV;AAWI,MAAA,UAAU,EAAEG;AAXhB;AAAA;AAAA;AAAA;AAAA,YA1DJ,EAuEK9B,IAAI,gBACF;AAAA,6BACC,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,kCACI,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEC,OAAO,CAACP,WAAhC;AAAA,oCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AACI,cAAA,EAAE,EAAC,eADP;AAEI,cAAA,KAAK,EAAEK,KAAK,CAACyF,UAFjB;AAGI,cAAA,QAAQ,EAAEzF,KAAK,CAAC0F,kBAHpB;AAAA,wBAKKzF,IAAI,CAACgD,OAAL,CAAa0C,GAAb,CAAkBpC,MAAD,iBACd,QAAC,QAAD;AAA2B,gBAAA,KAAK,EAAEA,MAAlC;AAAA,0BAA2CA,MAAM,CAACJ;AAAlD,iBAAeI,MAAM,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,sBADH;AALL;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAYI,QAAC,MAAD;AACI,YAAA,OAAO,EAAEd,qBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,EAeK1C,KAAK,CAACuD,MAAN,gBACC;AAAA,mCACE,QAAC,MAAD;AACI,cAAA,OAAO,EAAE,MAAMD,YAAY,CAACtD,KAAK,CAACuD,MAAP,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,GAKC,IApBN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAuBI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ,eA0BI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,SAAS,EAAC,QAA/B;AAAA,oBACKvD,KAAK,CAACuD,MAAN,gBACC;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,SAAS,MAApB;AAAqB,cAAA,OAAO,EAAE,CAA9B;AAAiC,cAAA,SAAS,EAAC,QAA3C;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,SAAS,MAApB;AAAqB,gBAAA,SAAS,EAAC,KAA/B;AAAqC,gBAAA,OAAO,EAAE,CAA9C;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,0CACcvD,KAAK,CAACuD,MAAN,CAAaqC,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,0CACc5F,KAAK,CAACuD,MAAN,CAAasC,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eASI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,0CACgB7F,KAAK,CAACuD,MAAN,CAAauC,SAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,eAYI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,iDACuB9F,KAAK,CAACuD,MAAN,CAAawC,gBADpC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZJ,eAeI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,kDACwB/F,KAAK,CAACuD,MAAN,CAAayC,iBADrC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAoBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,sCACI,QAAC,MAAD;AACI,gBAAA,OAAO,EAAErD,sBADb;AAAA,2CAEc,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,MAAD;AACI,gBAAA,OAAO,EAAEC,yBADb;AAAA,8CAEiB,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI,QAAC,MAAD;AACI,gBAAA,OAAO,EAAEC,uBADb;AAAA,4CAEe,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAUI,QAAC,MAAD;AACI,gBAAA,OAAO,EAAEC,mBADb;AAAA,uCAEU,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAaI,QAAC,MAAD;AACI,gBAAA,OAAO,EAAEC,wBADb;AAAA,6CAEgB,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAuCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxCN;AAAA;AAAA;AAAA;AAAA,gBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADE,gBAuEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9IP;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkJH;;GA3WuBhD,U;UAGJN,S;;;KAHIM,U","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Grid,\n    InputLabel,\n    MenuItem,\n    Select,\n    FormControl,\n    Button,\n    Typography\n} from '@material-ui/core'\nimport { format, compareAsc } from 'date-fns'\n\nimport AddBudgetDialog from './AddBudgetDialog'\nimport FixedCostsDialog from './FixedCosts/FixedCostsDialog'\nimport VariableCostsDialog from './VariableCosts/VariableCostsDialog'\nimport FutureCostsDialog from './FutureCosts/FutureCostsDialog'\nimport IncomesDialog from './Incomes/IncomesDialog'\nimport BankAccountsDialog from './BankAccounts/BankAccountsDialog'\n\nimport accounting from '../../funcs/accounting'\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120\n    }\n}))\n\nexport default function Accounting(props) {\n    const { user } = props\n\n    const classes = useStyles()\n    const [addBudgetDialog, setAddBudgetDialog] = React.useState(false)\n    const [fixedCostsDialog, setFixedCostsDialog] = React.useState(false)\n    const [variableCostsDialog, setVariableCostsDialog] = React.useState(false)\n    const [futureCostsDialog, setFutureCostsDialog] = React.useState(false)\n    const [incomesDialog, setIncomesDialog] = React.useState(false)\n    const [bankAccountsDialog, setBankAccountsDialog] = React.useState(false)\n    const [state, setState] = React.useState()\n    const [addFixedCostDialog, setAddFixedCostDialog] = React.useState(false)\n    const [addVariableCostDialog, setAddVariableCostDialog] = React.useState(false)\n    const [addFutureCostDialog, setAddFutureCostDialog] = React.useState(false)\n    const [addIncomeDialog, setAddIncomeDialog] = React.useState(false)\n    const [addBankAccountDialog, setAddBankAccountDialog] = React.useState(false)\n    const [date, setDate] = React.useState(format(new Date(), 'yyyy-MM-dd'))\n\n    const selectDate = (e) => {\n        setDate(e.target.value)\n    }\n\n    const handleAddFixedCostDialog = () => {\n        setAddFixedCostDialog(!addFixedCostDialog)\n    }\n\n    const handleAddVariableCostDialog = () => {\n        setAddVariableCostDialog(!addVariableCostDialog)\n    }\n\n    const handleAddFutureCostDialog = () => {\n        setAddFutureCostDialog(!addFutureCostDialog)\n    }\n\n    const handleAddIncomeDialog = () => {\n        setAddIncomeDialog(!addIncomeDialog)\n    }\n\n    const handleAddBankAccountDialog = () => {\n        setAddBankAccountDialog(!addBankAccountDialog)\n    }\n\n    const handleChange = (e) => {\n        setState({...state, [e.target.id]: e.target.value})\n    } \n\n    const handleAddBudgetDialog = () => {\n        setAddBudgetDialog(!addBudgetDialog)\n    }\n\n    const handleFixedCostsDialog = () => {\n        setFixedCostsDialog(!fixedCostsDialog)\n    }\n\n    const handleVariableCostsDialog = () => {\n        setVariableCostsDialog(!variableCostsDialog)\n    }\n\n    const handleFutureCostsDialog = () => {\n        setFutureCostsDialog(!futureCostsDialog)\n    }\n\n    const handleIncomesDialog = () => {\n        setIncomesDialog(!incomesDialog)\n    }\n\n    const handleBankAccountsDialog = () => {\n        setBankAccountsDialog(!bankAccountsDialog)\n    }\n\n    const addBudget = () => {\n        let { budgets, success } = accounting.addBudget(state.name).then(() => {\n            props.authUser()\n            handleAddBudgetDialog()\n        })\n    }\n\n    const deleteBudget = (budget) => {\n        let { budgets, success } = accounting.deleteBudget(budget._id).then(() => {\n            props.authUser()\n        })\n    }\n\n    const addFixedCost = async () => {\n        const {\n            due_day,\n            amount,\n            from,\n            to,\n            frequency,\n            notes\n        } = state\n        let fixed_cost = {\n            due_day,\n            amount,\n            from,\n            to,\n            frequency,\n            notes\n        }\n        await accounting.addFixedCost(props.budget, fixed_cost)\n        props.update(props.budget)\n        handleAddFixedCostDialog()\n    }\n\n    const deleteFixedCost = async (fixed_cost_id) => {\n        for (let i = 0; i < fixed_cost_id.length; i++) {\n            await accounting.deleteFixedCost(props.budget, fixed_cost_id[i])\n            props.update(props.budget)\n        }\n    }\n\n    const addVariableCost = async () => {\n        const {\n            amount,\n            from,\n            to,\n            notes\n        } = state\n        let variable_cost = {\n            date: date,\n            amount,\n            from,\n            to,\n            notes\n        }\n        console.log(date)\n        await accounting.addVariableCost(props.budget, variable_cost)\n        props.update(props.budget)\n        handleAddVariableCostDialog()\n    }\n\n    const deleteVariableCost = async (variable_cost_id) => {\n        for (let i = 0; i < variable_cost_id.length; i++) {\n            await accounting.deleteVariableCost(props.budget, variable_cost_id[i])\n            props.update(props.budget)\n        }\n    }\n\n    const addFutureCost = async () => {\n        const {\n            amount,\n            from,\n            to,\n            notes\n        } = state\n        let future_cost = {\n            date: date,\n            amount,\n            from,\n            to,\n            notes\n        }\n        await accounting.addFutureCost(props.budget, future_cost)\n        props.update(props.budget)\n        handleAddFutureCostDialog()\n    }\n\n    const deleteFutureCost = async (future_cost_id) => {\n        for (let i = 0; i < future_cost_id.length; i++) {\n            await accounting.deleteFutureCost(props.budget, future_cost_id[i])\n            props.update(props.budget)\n        }\n    }\n\n    const addIncome = async () => {\n        const {\n            amount,\n            from,\n            to,\n            notes\n        } = state\n        let income = {\n            date: date,\n            amount,\n            from,\n            to,\n            notes\n        }\n        await accounting.addIncome(props.budget, income)\n        props.update(props.budget)\n        handleAddIncomeDialog()\n    }\n\n    const deleteIncome = async (income_id) => {\n        for (let i = 0; i < income_id.length; i++) {\n            await accounting.deleteIncome(props.budget, income_id[i])\n            props.update(props.budget)\n        }\n    }\n\n    const addBankAccount = async () => {\n        const {\n            amount,\n            from,\n            bank_name,\n            notes\n        } = state\n        let bank_account = {\n            date: date,\n            amount,\n            from,\n            bank_name,\n            notes\n        }\n        await accounting.addBankAccount(props.budget, bank_account)\n        props.update(props.budget)\n        handleAddBankAccountDialog()\n    }\n\n    const deleteBankAccount = async (bank_account_id) => {\n        for (let i = 0; i < bank_account_id.length; i++) {\n            await accounting.deleteBankAccount(props.budget, bank_account_id[i])\n            props.update(props.budget)\n        }\n    }\n\n    return (\n        <div>\n            <AddBudgetDialog\n                open={addBudgetDialog}\n                handleChange={handleChange}\n                addBudget={addBudget}\n                onClose={handleAddBudgetDialog}\n                authUser={props.authUser}\n            />\n            <FixedCostsDialog\n                open={fixedCostsDialog}\n                onClose={handleFixedCostsDialog}\n                budget={props.budget}\n                addFixedCost={addFixedCost}\n                handleChange={handleChange}\n                authUser={props.authUser}\n                addFixedCostDialog={addFixedCostDialog}\n                handleAddFixedCostDialog={handleAddFixedCostDialog}\n                deleteFixedCost={deleteFixedCost}\n            />\n            <VariableCostsDialog\n                open={variableCostsDialog}\n                onClose={handleVariableCostsDialog}\n                budget={props.budget}\n                addVariableCost={addVariableCost}\n                handleChange={handleChange}\n                authUser={props.authUser}\n                addVariableCostDialog={addVariableCostDialog}\n                handleAddVariableCostDialog={handleAddVariableCostDialog}\n                deleteVariableCost={deleteVariableCost}\n                date={date}\n                selectDate={selectDate}\n            />\n            <FutureCostsDialog\n                open={futureCostsDialog}\n                onClose={handleFutureCostsDialog}\n                budget={props.budget}\n                addFutureCost={addFutureCost}\n                handleChange={handleChange}\n                authUser={props.authUser}\n                addFutureCostDialog={addFutureCostDialog}\n                handleAddFutureCostDialog={handleAddFutureCostDialog}\n                deleteFutureCost={deleteFutureCost}\n                date={date}\n                selectDate={selectDate}\n            />\n            <IncomesDialog\n                open={incomesDialog}\n                onClose={handleIncomesDialog}\n                budget={props.budget}\n                addIncome={addIncome}\n                handleChange={handleChange}\n                authUser={props.authUser}\n                addIncomeDialog={addIncomeDialog}\n                handleAddIncomeDialog={handleAddIncomeDialog}\n                deleteIncome={deleteIncome}\n                date={date}\n                selectDate={selectDate}\n            />\n            <BankAccountsDialog\n                open={bankAccountsDialog}\n                onClose={handleBankAccountsDialog}\n                budget={props.budget}\n                addBankAccount={addBankAccount}\n                handleChange={handleChange}\n                authUser={props.authUser}\n                addBankAccountDialog={addBankAccountDialog}\n                handleAddBankAccountDialog={handleAddBankAccountDialog}\n                deleteBankAccount={deleteBankAccount}\n                date={date}\n                selectDate={selectDate}\n            />\n            {user\n            ? (<div>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel>Budget</InputLabel>\n                            <Select\n                                id=\"select-budget\"\n                                value={props.budgetName}\n                                onChange={props.handleSelectBudget}\n                            >\n                                {user.budgets.map((budget) => (\n                                    <MenuItem key={budget._id} value={budget}>{budget.name}</MenuItem>))}\n                            </Select>\n                        </FormControl>\n                        <Button\n                            onClick={handleAddBudgetDialog}\n                        >Add a budget</Button>\n                        {props.budget\n                        ? <div>\n                            <Button\n                                onClick={() => deleteBudget(props.budget)}\n                            >Delete</Button></div>\n                        : null}                        \n                    </Grid>\n                    <Grid item>\n                        Select working days\n                    </Grid>\n                    <Grid item container direction=\"column\">                        \n                        {props.budget\n                        ? <div>\n                            <Grid item container spacing={1} direction=\"column\">\n                                <Grid item container direction='row' spacing={1}>\n                                    <Grid item>\n                                        To earn: {props.budget.to_earn}\n                                    </Grid>\n                                    <Grid item>\n                                        To save: {props.budget.to_save}\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    Net worth: {props.budget.net_worth}\n                                </Grid>\n                                <Grid item>\n                                    Net worth needed: {props.budget.net_worth_needed}\n                                </Grid>\n                                <Grid item>\n                                    Net worth missing: {props.budget.net_worth_missing}\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={handleFixedCostsDialog}\n                                >Fixed Costs {'£ total'}</Button>\n                                <Button\n                                    onClick={handleVariableCostsDialog}\n                                >Variable Costs {'£ total'}</Button>\n                                <Button\n                                    onClick={handleFutureCostsDialog}\n                                >Future Costs {'£ total'}</Button>\n                                <Button\n                                    onClick={handleIncomesDialog}\n                                >Incomes {'£ total'}</Button>\n                                <Button\n                                    onClick={handleBankAccountsDialog}\n                                >Bank accounts {'£ total'}</Button>\n                            </Grid>\n                            </div>\n                        : <div>Select a budget and working days to see details</div>}\n                    </Grid>\n                </Grid></div>)\n            : (<div>Loading . . .</div>)}            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}