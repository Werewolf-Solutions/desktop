{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Layout/CheckBoxGridList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, GridListTile, GridListTileBar, Checkbox, FormControlLabel } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexWrap: 'nowrap'\n  }\n}));\nexport default function CheckBoxGridList(props) {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(props.checked);\n\n  const handleSelectWorkingDays = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    props.authUser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.root,\n      container: true,\n      children: props.data.map(value => {\n        const labelId = `checkbox-list-label-${value}`;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          role: undefined,\n          button: true,\n          onClick: props.handleSelectWorkingDays(value),\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: props.checked.indexOf(value) !== -1,\n              tabIndex: -1,\n              disableRipple: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this),\n            label: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckBoxGridList, \"qR+xlPRia4eDWIYjtfzEzeyAZ78=\", false, function () {\n  return [useStyles];\n});\n\n_c = CheckBoxGridList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxGridList\");","map":{"version":3,"sources":["/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Layout/CheckBoxGridList.js"],"names":["React","makeStyles","Grid","GridListTile","GridListTileBar","Checkbox","FormControlLabel","useStyles","theme","root","flexWrap","CheckBoxGridList","props","classes","checked","setChecked","useState","handleSelectWorkingDays","value","currentIndex","indexOf","newChecked","push","splice","authUser","data","map","labelId","undefined"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACIC,IADJ,EAEIC,YAFJ,EAGIC,eAHJ,EAIIC,QAJJ,EAKIC,gBALJ,QAMO,mBANP;AAQA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AAD+B,CAAZ,CAAD,CAA5B;AAMA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC5C,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBf,KAAK,CAACgB,QAAN,CAAeJ,KAAK,CAACE,OAArB,CAA9B;;AAEA,QAAMG,uBAAuB,GAAIC,KAAD,IAAW,MAAM;AAC7C,UAAMC,YAAY,GAAGL,OAAO,CAACM,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGP,OAAJ,CAAnB;;AAGA,QAAIK,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACH,KAFD,MAEO;AACHG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACH;;AACDJ,IAAAA,UAAU,CAACM,UAAD,CAAV;AACAT,IAAAA,KAAK,CAACY,QAAN;AAEH,GAbD;;AAcA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEX,OAAO,CAACJ,IAAzB;AAA+B,MAAA,SAAS,MAAxC;AAAA,gBACCG,KAAK,CAACa,IAAN,CAAWC,GAAX,CAAgBR,KAAD,IAAW;AACvB,cAAMS,OAAO,GAAI,uBAAsBT,KAAM,EAA7C;AACA,4BACI,QAAC,IAAD;AAAkB,UAAA,IAAI,EAAEU,SAAxB;AAAmC,UAAA,MAAM,MAAzC;AAA0C,UAAA,OAAO,EAAEhB,KAAK,CAACK,uBAAN,CAA8BC,KAA9B,CAAnD;AAAyF,UAAA,IAAI,MAA7F;AAAA,iCACI,QAAC,gBAAD;AACI,YAAA,OAAO,eACH,QAAC,QAAD;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,OAAO,EAAEN,KAAK,CAACE,OAAN,CAAcM,OAAd,CAAsBF,KAAtB,MAAiC,CAAC,CAF/C;AAGI,cAAA,QAAQ,EAAE,CAAC,CAHf;AAII,cAAA,aAAa;AAJjB;AAAA;AAAA;AAAA;AAAA,oBAFR;AASI,YAAA,KAAK,EAAEA;AATX;AAAA;AAAA;AAAA;AAAA;AADJ,WAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcF,OAhBD;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GAzCuBP,gB;UACJJ,S;;;KADII,gB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    GridListTile,\n    GridListTileBar,\n    Checkbox,\n    FormControlLabel\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexWrap: 'nowrap',\n    },    \n}));\n\nexport default function CheckBoxGridList(props) {\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState(props.checked);\n\n    const handleSelectWorkingDays = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n        props.authUser();\n        \n    };\n    return (\n        <div>\n            <Grid className={classes.root} container>\n            {props.data.map((value) => {\n                const labelId = `checkbox-list-label-${value}`;\n                return(\n                    <Grid key={value} role={undefined} button onClick={props.handleSelectWorkingDays(value)} item>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    edge=\"start\"\n                                    checked={props.checked.indexOf(value) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                />\n                            }\n                            label={value}\n                        />                                       \n                    </Grid>\n            )})}\n        </Grid>\n      </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}