{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Accounting/Accounting.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, InputLabel, MenuItem, Select, FormControl, Button } from '@material-ui/core';\nimport AddBudgetDialog from './AddBudgetDialog';\nimport FixedCostsDialog from './FixedCosts/FixedCostsDialog';\nimport VariableCostsDialog from './VariableCosts/VariableCostsDialog';\nimport FutureCostsDialog from './FutureCosts/FutureCostsDialog';\nimport IncomesDialog from './Incomes/IncomesDialog';\nimport BankAccountsDialog from './BankAccounts/BankAccountsDialog';\nimport accounting from '../../funcs/accounting';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nexport default function Accounting(props) {\n  _s();\n\n  const {\n    user\n  } = props;\n  const classes = useStyles();\n  const [budget, setBudget] = React.useState(\"\");\n  const [budgetName, setBudgetName] = React.useState();\n  const [addBudgetDialog, setAddBudgetDialog] = React.useState(false);\n  const [fixedCostsDialog, setFixedCostsDialog] = React.useState(false);\n  const [variableCostsDialog, setVariableCostsDialog] = React.useState(false);\n  const [futureCostsDialog, setFutureCostsDialog] = React.useState(false);\n  const [incomesDialog, setIncomesDialog] = React.useState(false);\n  const [bankAccountsDialog, setBankAccountsDialog] = React.useState(false);\n  const [fixedCosts, setFixedCosts] = React.useState();\n  const [state, setState] = React.useState();\n  const [addFixedCostDialog, setAddFixedCostDialog] = React.useState(false);\n\n  const handleAddFixedCostDialog = () => {\n    setAddFixedCostDialog(!addFixedCostDialog);\n  };\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleSelect = event => {\n    setBudget(event.target.value);\n    setFixedCosts(event.target.value.fixed_costs);\n    setBudgetName(event.target.value.name);\n  };\n\n  const handleAddBudgetDialog = () => {\n    setAddBudgetDialog(!addBudgetDialog);\n  };\n\n  const handleFixedCostsDialog = () => {\n    setFixedCostsDialog(!fixedCostsDialog);\n  };\n\n  const handleVariableCostsDialog = () => {\n    setVariableCostsDialog(!variableCostsDialog);\n  };\n\n  const handleFutureCostsDialog = () => {\n    setFutureCostsDialog(!futureCostsDialog);\n  };\n\n  const handleIncomesDialog = () => {\n    setIncomesDialog(!incomesDialog);\n  };\n\n  const handleBankAccountsDialog = () => {\n    setBankAccountsDialog(!bankAccountsDialog);\n  };\n\n  const addBudget = () => {\n    let {\n      budgets,\n      success\n    } = accounting.addBudget(state.name).then(() => {\n      props.authUser();\n      handleAddBudgetDialog();\n    });\n  };\n\n  const deleteBudget = budget => {\n    let {\n      budgets,\n      success\n    } = accounting.deleteBudget(budget._id).then(() => {\n      props.authUser();\n      setBudget(undefined);\n    });\n  };\n\n  const addFixedCost = () => {\n    const {\n      due_day,\n      amount,\n      from,\n      to,\n      frequency,\n      notes\n    } = state;\n    let fixed_cost = {\n      due_day,\n      amount,\n      from,\n      to,\n      frequency,\n      notes\n    };\n    accounting.addFixedCost(budget, fixed_cost).then(data => {\n      let {\n        budgets,\n        success,\n        error\n      } = data;\n\n      for (let i = 0; i < budgets.length; i++) {\n        console.log(budgets[i]._id);\n\n        if (budget._id === budgets[i]._id) {\n          setBudget(budgets[i]);\n          setBudgetName(budgets[i].name);\n        }\n      }\n\n      props.authUser();\n      handleAddFixedCostDialog();\n    });\n  };\n\n  const deleteFixedCost = fixed_cost_id => {\n    for (let i = 0; i < fixed_cost_id.length; i++) {\n      accounting.deleteFixedCost(budget, fixed_cost_id[i]).then(data => {\n        let {\n          budgets,\n          success,\n          error\n        } = data;\n\n        for (let i = 0; i < budgets.length; i++) {\n          if (budget._id === budgets[i]._id) {\n            setBudget(budgets[i]);\n            setBudgetName(budgets[i].name);\n          }\n        }\n\n        props.authUser();\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddBudgetDialog, {\n      open: addBudgetDialog,\n      handleChange: handleChange,\n      addBudget: addBudget,\n      onClose: handleAddBudgetDialog,\n      authUser: props.authUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FixedCostsDialog, {\n      open: fixedCostsDialog,\n      budget: budget,\n      addFixedCost: addFixedCost,\n      handleChange: handleChange,\n      authUser: props.authUser,\n      onClose: handleFixedCostsDialog,\n      addFixedCostDialog: addFixedCostDialog,\n      handleAddFixedCostDialog: handleAddFixedCostDialog,\n      deleteFixedCost: deleteFixedCost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VariableCostsDialog, {\n      open: variableCostsDialog,\n      onClose: handleVariableCostsDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FutureCostsDialog, {\n      open: futureCostsDialog,\n      onClose: handleFutureCostsDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IncomesDialog, {\n      open: incomesDialog,\n      onClose: handleIncomesDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BankAccountsDialog, {\n      open: bankAccountsDialog,\n      onClose: handleBankAccountsDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: \"select-budget\",\n              value: budgetName,\n              onChange: handleSelect,\n              children: user.budgets.map(budget => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: budget,\n                children: budget.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddBudgetDialog,\n            children: \"Add a budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), budget ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => deleteBudget(budget),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 27\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          direction: \"column\",\n          children: budget ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [\"To earn: \", budget.to_earn]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              direction: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleFixedCostsDialog,\n                children: \"Fixed Costs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleVariableCostsDialog,\n                children: \"Variable Costs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleFutureCostsDialog,\n                children: \"Future Costs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleIncomesDialog,\n                children: \"Incomes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleBankAccountsDialog,\n                children: \"Bank accounts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Select a budget and working days to see details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading . . .\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Accounting, \"gQDWpAKDtT3AGNwAM0x9Uk9fe9w=\", false, function () {\n  return [useStyles];\n});\n\n_c = Accounting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accounting\");","map":{"version":3,"sources":["/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Accounting/Accounting.js"],"names":["React","makeStyles","Grid","InputLabel","MenuItem","Select","FormControl","Button","AddBudgetDialog","FixedCostsDialog","VariableCostsDialog","FutureCostsDialog","IncomesDialog","BankAccountsDialog","accounting","useStyles","theme","formControl","margin","spacing","minWidth","Accounting","props","user","classes","budget","setBudget","useState","budgetName","setBudgetName","addBudgetDialog","setAddBudgetDialog","fixedCostsDialog","setFixedCostsDialog","variableCostsDialog","setVariableCostsDialog","futureCostsDialog","setFutureCostsDialog","incomesDialog","setIncomesDialog","bankAccountsDialog","setBankAccountsDialog","fixedCosts","setFixedCosts","state","setState","addFixedCostDialog","setAddFixedCostDialog","handleAddFixedCostDialog","handleChange","e","target","id","value","handleSelect","event","fixed_costs","name","handleAddBudgetDialog","handleFixedCostsDialog","handleVariableCostsDialog","handleFutureCostsDialog","handleIncomesDialog","handleBankAccountsDialog","addBudget","budgets","success","then","authUser","deleteBudget","_id","undefined","addFixedCost","due_day","amount","from","to","frequency","notes","fixed_cost","data","error","i","length","console","log","deleteFixedCost","fixed_cost_id","map","to_earn"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Grid,\n    InputLabel,\n    MenuItem,\n    Select,\n    FormControl,\n    Button\n} from '@material-ui/core'\nimport AddBudgetDialog from './AddBudgetDialog'\nimport FixedCostsDialog from './FixedCosts/FixedCostsDialog'\nimport VariableCostsDialog from './VariableCosts/VariableCostsDialog'\nimport FutureCostsDialog from './FutureCosts/FutureCostsDialog'\nimport IncomesDialog from './Incomes/IncomesDialog'\nimport BankAccountsDialog from './BankAccounts/BankAccountsDialog'\n\nimport accounting from '../../funcs/accounting'\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120\n    }\n}))\n\nexport default function Accounting(props) {\n    const { user } = props\n\n    const classes = useStyles()\n    const [budget, setBudget] = React.useState(\"\")\n    const [budgetName, setBudgetName] = React.useState()\n    const [addBudgetDialog, setAddBudgetDialog] = React.useState(false)\n    const [fixedCostsDialog, setFixedCostsDialog] = React.useState(false)\n    const [variableCostsDialog, setVariableCostsDialog] = React.useState(false)\n    const [futureCostsDialog, setFutureCostsDialog] = React.useState(false)\n    const [incomesDialog, setIncomesDialog] = React.useState(false)\n    const [bankAccountsDialog, setBankAccountsDialog] = React.useState(false)\n    const [fixedCosts, setFixedCosts] = React.useState()\n    const [state, setState] = React.useState()\n    const [addFixedCostDialog, setAddFixedCostDialog] = React.useState(false)\n\n    const handleAddFixedCostDialog = () => {\n        setAddFixedCostDialog(!addFixedCostDialog)\n    }\n\n    const handleChange = (e) => {\n        setState({...state, [e.target.id]: e.target.value})\n    } \n\n    const handleSelect = (event) => {\n        setBudget(event.target.value)\n        setFixedCosts(event.target.value.fixed_costs)\n        setBudgetName(event.target.value.name)\n    }\n\n    const handleAddBudgetDialog = () => {\n        setAddBudgetDialog(!addBudgetDialog)\n    }\n\n    const handleFixedCostsDialog = () => {\n        setFixedCostsDialog(!fixedCostsDialog)\n    }\n\n    const handleVariableCostsDialog = () => {\n        setVariableCostsDialog(!variableCostsDialog)\n    }\n\n    const handleFutureCostsDialog = () => {\n        setFutureCostsDialog(!futureCostsDialog)\n    }\n\n    const handleIncomesDialog = () => {\n        setIncomesDialog(!incomesDialog)\n    }\n\n    const handleBankAccountsDialog = () => {\n        setBankAccountsDialog(!bankAccountsDialog)\n    }\n\n    const addBudget = () => {\n        let { budgets, success } = accounting.addBudget(state.name).then(() => {\n            props.authUser()\n            handleAddBudgetDialog()\n        })\n    }\n\n    const deleteBudget = (budget) => {\n        let { budgets, success } = accounting.deleteBudget(budget._id).then(() => {\n            props.authUser()\n            setBudget(undefined)\n        })\n    }\n\n    const addFixedCost = () => {\n        const {\n            due_day,\n            amount,\n            from,\n            to,\n            frequency,\n            notes\n        } = state\n        let fixed_cost = {\n            due_day,\n            amount,\n            from,\n            to,\n            frequency,\n            notes\n        }\n        accounting.addFixedCost(budget, fixed_cost).then((data) => {\n            let { budgets, success, error } = data\n            for (let i = 0; i < budgets.length; i++) {\n                console.log(budgets[i]._id)\n                if (budget._id === budgets[i]._id) {\n                    setBudget(budgets[i])\n                    setBudgetName(budgets[i].name)\n                }\n            }\n            props.authUser()\n            handleAddFixedCostDialog()\n        })\n    }\n\n    const deleteFixedCost = (fixed_cost_id) => {\n        for (let i = 0; i < fixed_cost_id.length; i++) {\n            accounting.deleteFixedCost(budget, fixed_cost_id[i]).then((data) => {\n                let { budgets, success, error } = data\n                for (let i = 0; i < budgets.length; i++) {\n                    if (budget._id === budgets[i]._id) {\n                        setBudget(budgets[i])\n                        setBudgetName(budgets[i].name)\n                    }\n                }\n                props.authUser()\n            })\n        }\n    }\n\n    return (\n        <div>\n            <AddBudgetDialog\n                open={addBudgetDialog}\n                handleChange={handleChange}\n                addBudget={addBudget}\n                onClose={handleAddBudgetDialog}\n                authUser={props.authUser}\n            />\n            <FixedCostsDialog\n                open={fixedCostsDialog}\n                budget={budget}\n                addFixedCost={addFixedCost}\n                handleChange={handleChange}\n                authUser={props.authUser}\n                onClose={handleFixedCostsDialog}\n                addFixedCostDialog={addFixedCostDialog}\n                handleAddFixedCostDialog={handleAddFixedCostDialog}\n                deleteFixedCost={deleteFixedCost}\n            />\n            <VariableCostsDialog\n                open={variableCostsDialog}\n                onClose={handleVariableCostsDialog}\n            />\n            <FutureCostsDialog\n                open={futureCostsDialog}\n                onClose={handleFutureCostsDialog}\n            />\n            <IncomesDialog\n                open={incomesDialog}\n                onClose={handleIncomesDialog}\n            />\n            <BankAccountsDialog\n                open={bankAccountsDialog}\n                onClose={handleBankAccountsDialog}\n            />\n            {user \n            ? (<div>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel>Budget</InputLabel>\n                            <Select\n                                id=\"select-budget\"\n                                value={budgetName}\n                                onChange={handleSelect}\n                            >\n                                {user.budgets.map((budget) => (\n                                    <MenuItem value={budget}>{budget.name}</MenuItem>))}\n                            </Select>\n                        </FormControl>\n                        <Button\n                            onClick={handleAddBudgetDialog}\n                        >Add a budget</Button>\n                        {budget\n                        ? <div>\n                            <Button\n                                onClick={() => deleteBudget(budget)}\n                            >Delete</Button></div>\n                        : null}                        \n                    </Grid>\n                    <Grid item container direction=\"column\">                        \n                        {budget\n                        ? <div>\n                            <Grid item>\n                                To earn: {budget.to_earn}\n                            </Grid>\n                            <Grid item direction=\"row\">\n                                <Button\n                                    onClick={handleFixedCostsDialog}\n                                >Fixed Costs</Button>\n                                <Button\n                                    onClick={handleVariableCostsDialog}\n                                >Variable Costs</Button>\n                                <Button\n                                    onClick={handleFutureCostsDialog}\n                                >Future Costs</Button>\n                                <Button\n                                    onClick={handleIncomesDialog}\n                                >Incomes</Button>\n                                <Button\n                                    onClick={handleBankAccountsDialog}\n                                >Bank accounts</Button>\n                            </Grid>\n                            </div>\n                        : <div>Select a budget and working days to see details</div>}\n                    </Grid>\n                </Grid></div>)\n            : (<div>Loading . . .</div>)}            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}