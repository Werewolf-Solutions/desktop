{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Dialog,DialogContent,DialogContentText,DialogTitle,Grid,TextField,FormControl,InputLabel,Select,MenuItem,ListItemText,Checkbox,Input,DialogActions,Button}from'@material-ui/core';import axios from'axios';var ITEM_HEIGHT=48;var ITEM_PADDING_TOP=8;var MenuProps={PaperProps:{style:{maxHeight:ITEM_HEIGHT*4.5+ITEM_PADDING_TOP,width:250}}};export default function BotInterface(props){var onClose=props.onClose,open=props.open;var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),exchanges=_React$useState2[0],setExchanges=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),strategies=_React$useState4[0],setStrategies=_React$useState4[1];var _React$useState5=React.useState(props.sec_coins),_React$useState6=_slicedToArray(_React$useState5,2),sec_coins=_React$useState6[0],setSecCoins=_React$useState6[1];var _React$useState7=React.useState(),_React$useState8=_slicedToArray(_React$useState7,2),state=_React$useState8[0],setState=_React$useState8[1];var handleChange=function handleChange(e){setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},e.target.id,e.target.value)));};var handleChangeExchanges=function handleChangeExchanges(event){setExchanges(event.target.value);};var handleChangeStrategies=function handleChangeStrategies(event){setStrategies(event.target.value);};var handleChangeSecCoins=function handleChangeSecCoins(event){setSecCoins(event.target.value);};var startBot=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var volume,order_limit,threshold,obj,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// send bot obj to server and start bot\nvolume=state.volume,order_limit=state.order_limit,threshold=state.threshold;obj={// COIN,\norder_limit:order_limit,volume:volume,exchanges:exchanges,strategies:strategies,sec_coins:sec_coins,threshold:threshold};_context.next=4;return axios.post('/api/trading-bot',obj);case 4:res=_context.sent;console.log(res.data);onClose();case 7:case\"end\":return _context.stop();}}},_callee);}));return function startBot(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Dialog,{onClose:onClose,\"aria-labelledby\":\"simple-dialog-title\",open:open,children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"simple-dialog-title\",children:\"Set your bot\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:\"Enter your custom variables\"}),/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(InputLabel,{id:\"demo-mutiple-checkbox-label\",children:\"Exchanges\"}),/*#__PURE__*/_jsx(Select,{labelId:\"demo-mutiple-checkbox-label\",id:\"demo-mutiple-checkbox\",multiple:true,value:exchanges,onChange:handleChangeExchanges,input:/*#__PURE__*/_jsx(Input,{}),renderValue:function renderValue(selected){return selected.join(', ');},MenuProps:MenuProps,children:props.exchanges_available.map(function(exchange){return/*#__PURE__*/_jsxs(MenuItem,{value:exchange.name,children:[/*#__PURE__*/_jsx(Checkbox,{checked:exchanges.indexOf(exchange.name)>-1}),/*#__PURE__*/_jsx(ListItemText,{primary:exchange.name})]},exchange.name);})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(InputLabel,{id:\"demo-mutiple-checkbox-label\",children:\"Strategies\"}),/*#__PURE__*/_jsx(Select,{labelId:\"demo-mutiple-checkbox-label\",id:\"demo-mutiple-checkbox\",multiple:true,value:strategies,onChange:handleChangeStrategies,input:/*#__PURE__*/_jsx(Input,{}),renderValue:function renderValue(selected){return selected.join(', ');},MenuProps:MenuProps,children:props.strategies.map(function(strategy){return/*#__PURE__*/_jsxs(MenuItem,{value:strategy,children:[/*#__PURE__*/_jsx(Checkbox,{checked:strategies.indexOf(strategy)>-1}),/*#__PURE__*/_jsx(ListItemText,{primary:strategy})]},strategy);})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(TextField,{id:\"volume\",label:\"volume\",type:\"volume\",onChange:handleChange})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(TextField,{id:\"order_limit\",label:\"order limit\",type:\"order_limit\",onChange:handleChange})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(InputLabel,{id:\"demo-mutiple-checkbox-label\",children:\"Secondary coins\"}),/*#__PURE__*/_jsx(Select,{labelId:\"demo-mutiple-checkbox-label\",id:\"demo-mutiple-checkbox\",multiple:true,value:sec_coins,onChange:handleChangeSecCoins,input:/*#__PURE__*/_jsx(Input,{}),renderValue:function renderValue(selected){return selected.join(', ');},MenuProps:MenuProps,children:props.sec_coins.map(function(sec_coin){return/*#__PURE__*/_jsxs(MenuItem,{value:sec_coin,children:[/*#__PURE__*/_jsx(Checkbox,{checked:sec_coins.indexOf(sec_coin)>-1}),/*#__PURE__*/_jsx(ListItemText,{primary:sec_coin})]},sec_coin);})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(TextField,{id:\"threshold\",label:\"threshold\",type:\"threshold\",onChange:handleChange})})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,color:\"primary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:startBot,color:\"primary\",children:\"Confirm\"})]})]})]})});}","map":{"version":3,"sources":["/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/BotInterface.js"],"names":["React","Dialog","DialogContent","DialogContentText","DialogTitle","Grid","TextField","FormControl","InputLabel","Select","MenuItem","ListItemText","Checkbox","Input","DialogActions","Button","axios","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","BotInterface","props","onClose","open","useState","exchanges","setExchanges","strategies","setStrategies","sec_coins","setSecCoins","state","setState","handleChange","e","target","id","value","handleChangeExchanges","event","handleChangeStrategies","handleChangeSecCoins","startBot","volume","order_limit","threshold","obj","post","res","console","log","data","selected","join","exchanges_available","map","exchange","name","indexOf","strategy","sec_coin"],"mappings":"u7BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,MADJ,CAEIC,aAFJ,CAGIC,iBAHJ,CAIIC,WAJJ,CAKIC,IALJ,CAMIC,SANJ,CAOIC,WAPJ,CAQIC,UARJ,CASIC,MATJ,CAUIC,QAVJ,CAWIC,YAXJ,CAYIC,QAZJ,CAaIC,KAbJ,CAcIC,aAdJ,CAeIC,MAfJ,KAgBO,mBAhBP,CAiBA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CACA,GAAMC,CAAAA,gBAAgB,CAAG,CAAzB,CACA,GAAMC,CAAAA,SAAS,CAAG,CACdC,UAAU,CAAE,CACRC,KAAK,CAAE,CACPC,SAAS,CAAEL,WAAW,CAAG,GAAd,CAAoBC,gBADxB,CAEPK,KAAK,CAAE,GAFA,CADC,CADE,CAAlB,CASA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,IAChCC,CAAAA,OADgC,CACdD,KADc,CAChCC,OADgC,CACvBC,IADuB,CACdF,KADc,CACvBE,IADuB,qBAGN3B,KAAK,CAAC4B,QAAN,CAAe,EAAf,CAHM,oDAGjCC,SAHiC,qBAGtBC,YAHsB,0CAIJ9B,KAAK,CAAC4B,QAAN,CAAe,EAAf,CAJI,qDAIjCG,UAJiC,qBAIrBC,aAJqB,0CAKPhC,KAAK,CAAC4B,QAAN,CAAeH,KAAK,CAACQ,SAArB,CALO,qDAKjCA,SALiC,qBAKtBC,WALsB,0CAMdlC,KAAK,CAAC4B,QAAN,EANc,qDAMjCO,KANiC,qBAM1BC,QAN0B,qBAQxC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBF,QAAQ,gCAAKD,KAAL,wBAAaG,CAAC,CAACC,MAAF,CAASC,EAAtB,CAA2BF,CAAC,CAACC,MAAF,CAASE,KAApC,GAAR,CACH,CAFD,CAIA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAW,CACrCb,YAAY,CAACa,KAAK,CAACJ,MAAN,CAAaE,KAAd,CAAZ,CACH,CAFD,CAIA,GAAMG,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACD,KAAD,CAAW,CACtCX,aAAa,CAACW,KAAK,CAACJ,MAAN,CAAaE,KAAd,CAAb,CACH,CAFD,CAIA,GAAMI,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACF,KAAD,CAAW,CACpCT,WAAW,CAACS,KAAK,CAACJ,MAAN,CAAaE,KAAd,CAAX,CACH,CAFD,CAIA,GAAMK,CAAAA,QAAQ,0FAAG,4KACb;AACMC,MAFO,CAE4BZ,KAF5B,CAEPY,MAFO,CAECC,WAFD,CAE4Bb,KAF5B,CAECa,WAFD,CAEcC,SAFd,CAE4Bd,KAF5B,CAEcc,SAFd,CAGTC,GAHS,CAGH,CACN;AACAF,WAAW,CAAXA,WAFM,CAGND,MAAM,CAANA,MAHM,CAINlB,SAAS,CAATA,SAJM,CAKNE,UAAU,CAAVA,UALM,CAMNE,SAAS,CAATA,SANM,CAONgB,SAAS,CAATA,SAPM,CAHG,uBAYKjC,CAAAA,KAAK,CAACmC,IAAN,CAAW,kBAAX,CAA+BD,GAA/B,CAZL,QAYPE,GAZO,eAabC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EACA7B,OAAO,GAdM,sDAAH,kBAARoB,CAAAA,QAAQ,0CAAd,CAiBA,mBACI,kCACI,MAAC,MAAD,EAAQ,OAAO,CAAEpB,OAAjB,CAA0B,kBAAgB,qBAA1C,CAAgE,IAAI,CAAEC,IAAtE,wBACA,KAAC,WAAD,EAAa,EAAE,CAAC,qBAAhB,0BADA,cAEA,MAAC,aAAD,yBACI,KAAC,iBAAD,0CADJ,cAII,MAAC,IAAD,EAAM,SAAS,KAAf,wBACI,KAAC,IAAD,EAAM,IAAI,KAAV,uBACA,MAAC,WAAD,yBACI,KAAC,UAAD,EAAY,EAAE,CAAC,6BAAf,uBADJ,cAEI,KAAC,MAAD,EACI,OAAO,CAAC,6BADZ,CAEI,EAAE,CAAC,uBAFP,CAGI,QAAQ,KAHZ,CAII,KAAK,CAAEE,SAJX,CAKI,QAAQ,CAAEa,qBALd,CAMI,KAAK,cAAE,KAAC,KAAD,IANX,CAOI,WAAW,CAAE,qBAACc,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAAd,EAPjB,CAQI,SAAS,CAAEtC,SARf,UAUCM,KAAK,CAACiC,mBAAN,CAA0BC,GAA1B,CAA8B,SAACC,QAAD,qBAC3B,MAAC,QAAD,EAA8B,KAAK,CAAEA,QAAQ,CAACC,IAA9C,wBACA,KAAC,QAAD,EAAU,OAAO,CAAEhC,SAAS,CAACiC,OAAV,CAAkBF,QAAQ,CAACC,IAA3B,EAAmC,CAAC,CAAvD,EADA,cAEA,KAAC,YAAD,EAAc,OAAO,CAAED,QAAQ,CAACC,IAAhC,EAFA,GAAeD,QAAQ,CAACC,IAAxB,CAD2B,EAA9B,CAVD,EAFJ,GADA,EADJ,cAuBI,KAAC,IAAD,EAAM,IAAI,KAAV,uBACA,MAAC,WAAD,yBACI,KAAC,UAAD,EAAY,EAAE,CAAC,6BAAf,wBADJ,cAEI,KAAC,MAAD,EACI,OAAO,CAAC,6BADZ,CAEI,EAAE,CAAC,uBAFP,CAGI,QAAQ,KAHZ,CAII,KAAK,CAAE9B,UAJX,CAKI,QAAQ,CAAEa,sBALd,CAMI,KAAK,cAAE,KAAC,KAAD,IANX,CAOI,WAAW,CAAE,qBAACY,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAAd,EAPjB,CAQI,SAAS,CAAEtC,SARf,UAUCM,KAAK,CAACM,UAAN,CAAiB4B,GAAjB,CAAqB,SAACI,QAAD,qBAClB,MAAC,QAAD,EAAyB,KAAK,CAAEA,QAAhC,wBACA,KAAC,QAAD,EAAU,OAAO,CAAEhC,UAAU,CAAC+B,OAAX,CAAmBC,QAAnB,EAA+B,CAAC,CAAnD,EADA,cAEA,KAAC,YAAD,EAAc,OAAO,CAAEA,QAAvB,EAFA,GAAeA,QAAf,CADkB,EAArB,CAVD,EAFJ,GADA,EAvBJ,cA6CI,KAAC,IAAD,EAAM,IAAI,KAAV,uBACI,KAAC,SAAD,EACI,EAAE,CAAC,QADP,CAEI,KAAK,CAAC,QAFV,CAGI,IAAI,CAAC,QAHT,CAII,QAAQ,CAAE1B,YAJd,EADJ,EA7CJ,cAqDI,KAAC,IAAD,EAAM,IAAI,KAAV,uBACI,KAAC,SAAD,EACI,EAAE,CAAC,aADP,CAEI,KAAK,CAAC,aAFV,CAGI,IAAI,CAAC,aAHT,CAII,QAAQ,CAAEA,YAJd,EADJ,EArDJ,cA6DI,KAAC,IAAD,EAAM,IAAI,KAAV,uBACA,MAAC,WAAD,yBACI,KAAC,UAAD,EAAY,EAAE,CAAC,6BAAf,6BADJ,cAEI,KAAC,MAAD,EACI,OAAO,CAAC,6BADZ,CAEI,EAAE,CAAC,uBAFP,CAGI,QAAQ,KAHZ,CAII,KAAK,CAAEJ,SAJX,CAKI,QAAQ,CAAEY,oBALd,CAMI,KAAK,cAAE,KAAC,KAAD,IANX,CAOI,WAAW,CAAE,qBAACW,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAAd,EAPjB,CAQI,SAAS,CAAEtC,SARf,UAUCM,KAAK,CAACQ,SAAN,CAAgB0B,GAAhB,CAAoB,SAACK,QAAD,qBACjB,MAAC,QAAD,EAAyB,KAAK,CAAEA,QAAhC,wBACA,KAAC,QAAD,EAAU,OAAO,CAAE/B,SAAS,CAAC6B,OAAV,CAAkBE,QAAlB,EAA8B,CAAC,CAAlD,EADA,cAEA,KAAC,YAAD,EAAc,OAAO,CAAEA,QAAvB,EAFA,GAAeA,QAAf,CADiB,EAApB,CAVD,EAFJ,GADA,EA7DJ,cAmFI,KAAC,IAAD,EAAM,IAAI,KAAV,uBACI,KAAC,SAAD,EACI,EAAE,CAAC,WADP,CAEI,KAAK,CAAC,WAFV,CAGI,IAAI,CAAC,WAHT,CAII,QAAQ,CAAE3B,YAJd,EADJ,EAnFJ,GAJJ,cAgGI,MAAC,aAAD,yBACA,KAAC,MAAD,EAAQ,OAAO,CAAEX,OAAjB,CAA0B,KAAK,CAAC,SAAhC,oBADA,cAIA,KAAC,MAAD,EAAQ,OAAO,CAAEoB,QAAjB,CAA2B,KAAK,CAAC,SAAjC,qBAJA,GAhGJ,GAFA,GADJ,EADJ,CAgHH","sourcesContent":["import React from 'react'\nimport {\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Grid,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    ListItemText,\n    Checkbox,\n    Input,\n    DialogActions,\n    Button\n} from '@material-ui/core';\nimport axios from 'axios';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n        },\n    },\n};\n\nexport default function BotInterface(props) {\n    const { onClose, open } = props;\n\n    const [exchanges, setExchanges] = React.useState([]);\n    const [strategies, setStrategies] = React.useState([]);\n    const [sec_coins, setSecCoins] = React.useState(props.sec_coins);\n    const [state, setState] = React.useState();\n\n    const handleChange = (e) => {\n        setState({...state, [e.target.id]: e.target.value});\n    }\n\n    const handleChangeExchanges = (event) => {\n        setExchanges(event.target.value);\n    };\n\n    const handleChangeStrategies = (event) => {\n        setStrategies(event.target.value);\n    };\n\n    const handleChangeSecCoins = (event) => {\n        setSecCoins(event.target.value);\n    };\n\n    const startBot = async () => {\n        // send bot obj to server and start bot\n        let { volume, order_limit, threshold } = state;\n        let obj = {\n            // COIN,\n            order_limit,\n            volume,\n            exchanges,\n            strategies,\n            sec_coins,\n            threshold\n        };\n        const res = await axios.post('/api/trading-bot', obj);\n        console.log(res.data);\n        onClose();\n    }\n\n    return(\n        <div>\n            <Dialog onClose={onClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle id=\"simple-dialog-title\">Set your bot</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Enter your custom variables\n                </DialogContentText>\n                <Grid container>\n                    <Grid item>\n                    <FormControl>\n                        <InputLabel id=\"demo-mutiple-checkbox-label\">Exchanges</InputLabel>\n                        <Select\n                            labelId=\"demo-mutiple-checkbox-label\"\n                            id=\"demo-mutiple-checkbox\"\n                            multiple\n                            value={exchanges}\n                            onChange={handleChangeExchanges}\n                            input={<Input />}\n                            renderValue={(selected) => selected.join(', ')}\n                            MenuProps={MenuProps}\n                        >\n                        {props.exchanges_available.map((exchange) => (\n                            <MenuItem key={exchange.name} value={exchange.name}>\n                            <Checkbox checked={exchanges.indexOf(exchange.name) > -1} />\n                            <ListItemText primary={exchange.name} />\n                            </MenuItem>\n                        ))}\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item>\n                    <FormControl>\n                        <InputLabel id=\"demo-mutiple-checkbox-label\">Strategies</InputLabel>\n                        <Select\n                            labelId=\"demo-mutiple-checkbox-label\"\n                            id=\"demo-mutiple-checkbox\"\n                            multiple\n                            value={strategies}\n                            onChange={handleChangeStrategies}\n                            input={<Input />}\n                            renderValue={(selected) => selected.join(', ')}\n                            MenuProps={MenuProps}\n                        >\n                        {props.strategies.map((strategy) => (\n                            <MenuItem key={strategy} value={strategy}>\n                            <Checkbox checked={strategies.indexOf(strategy) > -1} />\n                            <ListItemText primary={strategy} />\n                            </MenuItem>\n                        ))}\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <TextField \n                            id=\"volume\"\n                            label=\"volume\"\n                            type=\"volume\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField \n                            id=\"order_limit\"\n                            label=\"order limit\"\n                            type=\"order_limit\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item>\n                    <FormControl>\n                        <InputLabel id=\"demo-mutiple-checkbox-label\">Secondary coins</InputLabel>\n                        <Select\n                            labelId=\"demo-mutiple-checkbox-label\"\n                            id=\"demo-mutiple-checkbox\"\n                            multiple\n                            value={sec_coins}\n                            onChange={handleChangeSecCoins}\n                            input={<Input />}\n                            renderValue={(selected) => selected.join(', ')}\n                            MenuProps={MenuProps}\n                        >\n                        {props.sec_coins.map((sec_coin) => (\n                            <MenuItem key={sec_coin} value={sec_coin}>\n                            <Checkbox checked={sec_coins.indexOf(sec_coin) > -1} />\n                            <ListItemText primary={sec_coin} />\n                            </MenuItem>\n                        ))}\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <TextField \n                            id=\"threshold\"\n                            label=\"threshold\"\n                            type=\"threshold\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n                <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={startBot} color=\"primary\">\n                    Confirm\n                </Button>\n                </DialogActions>\n            </DialogContent>\n            </Dialog>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}