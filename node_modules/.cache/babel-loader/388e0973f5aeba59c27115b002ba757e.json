{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/Investments.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport ExchangeConnection from './ExchangeConnection';\nimport ExchangesTable from './ExchangesTable';\nimport ActiveBots from './ActiveBots';\nimport BotInterface from './BotInterface';\nexport default function Investments(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  let exchanges_available = [{\n    name: 'crypto.com'\n  }];\n  /**\n   * bot status\n   * \n   * live-trader\n   * \n   * paper-trader\n   * \n   * backtest\n   * \n   */\n\n  let strategies = ['grid', 'pair', 'custom'];\n  let bots = [{\n    id: 1,\n    status: 'live-trader',\n    strategy: 'grid',\n    exchanges: ['crypto.com'],\n    volume: 5,\n    order_limit: 1,\n    sec_coins: [] // if empty choose from available in balance\n\n  }, {\n    id: 2,\n    status: 'live-trader',\n    strategy: 'pair',\n    exchanges: ['crypto.com'],\n    volume: 5,\n    order_limit: 1,\n    sec_coins: [] // if empty choose from available in balance\n\n  }, {\n    id: 3,\n    status: 'live-trader',\n    strategy: 'custom',\n    exchanges: ['crypto.com'],\n    volume: 5,\n    order_limit: 1,\n    sec_coins: [] // if empty choose from available in balance\n\n  }];\n  let sec_coins = ['AAVE', 'ADA', 'LINK'];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      column: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          column: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(ExchangeConnection, {\n              exchanges_available: exchanges_available,\n              authUser: props.authUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClickOpen,\n              children: \"Set your bot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(BotInterface, {\n              open: open,\n              exchanges_available: exchanges_available,\n              strategies: strategies,\n              sec_coins: sec_coins,\n              onClose: handleClose,\n              handleClickOpen: handleClickOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(ExchangesTable, {\n            exchanges_available: exchanges_available,\n            user: props.user,\n            authUser: props.authUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(ActiveBots, {\n            bots: bots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: \"Total assets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: \"Total debt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: \"Net worth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Investments, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = Investments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Investments\");","map":{"version":3,"sources":["/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/Investments.js"],"names":["React","Button","Grid","ExchangeConnection","ExchangesTable","ActiveBots","BotInterface","Investments","props","open","setOpen","useState","exchanges_available","name","strategies","bots","id","status","strategy","exchanges","volume","order_limit","sec_coins","handleClickOpen","handleClose","authUser","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    Grid\n} from '@material-ui/core';\nimport ExchangeConnection from './ExchangeConnection';\nimport ExchangesTable from './ExchangesTable';\nimport ActiveBots from './ActiveBots';\nimport BotInterface from './BotInterface';\n\nexport default function Investments(props) {\n\n    const [open, setOpen] = React.useState(false);\n\n    let exchanges_available = [{name: 'crypto.com'}];\n\n    /**\n     * bot status\n     * \n     * live-trader\n     * \n     * paper-trader\n     * \n     * backtest\n     * \n     */\n\n    let strategies = ['grid', 'pair', 'custom'];\n\n    let bots = [{\n        id: 1,\n        status: 'live-trader',\n        strategy: 'grid',\n        exchanges: ['crypto.com'],\n        volume: 5,\n        order_limit: 1,\n        sec_coins: [] // if empty choose from available in balance\n    },{\n        id: 2,\n        status: 'live-trader',\n        strategy: 'pair',\n        exchanges: ['crypto.com'],\n        volume: 5,\n        order_limit: 1,\n        sec_coins: [] // if empty choose from available in balance\n    },{\n        id: 3,\n        status: 'live-trader',\n        strategy: 'custom',\n        exchanges: ['crypto.com'],\n        volume: 5,\n        order_limit: 1,\n        sec_coins: [] // if empty choose from available in balance\n    }]\n\n    let sec_coins = ['AAVE', 'ADA', 'LINK'];\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Grid container column>\n                <Grid item container>\n                    <Grid item container column>\n                        <Grid item>\n                            <ExchangeConnection\n                                exchanges_available={exchanges_available}\n                                authUser={props.authUser}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                onClick={handleClickOpen}\n                            >Set your bot</Button>\n                            <BotInterface\n                                open={open}\n                                exchanges_available={exchanges_available}\n                                strategies={strategies}\n                                sec_coins={sec_coins}\n                                onClose={handleClose}\n                                handleClickOpen={handleClickOpen}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <ExchangesTable\n                            exchanges_available={exchanges_available}\n                            user={props.user}\n                            authUser={props.authUser}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <ActiveBots\n                            bots={bots}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item container>\n                    <Grid item>\n                        Total assets\n                    </Grid>\n                    <Grid item>\n                        Total debt\n                    </Grid>\n                    <Grid item>\n                        Net worth\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}