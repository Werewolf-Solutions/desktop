{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles,Switch,ListItemSecondaryAction}from'@material-ui/core';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import ListItemAvatar from'@material-ui/core/ListItemAvatar';import ListItemIcon from'@material-ui/core/ListItemIcon';import ImageIcon from'@material-ui/icons/Image';import WorkIcon from'@material-ui/icons/Work';import BeachAccessIcon from'@material-ui/icons/BeachAccess';var useStyles=makeStyles(function(theme){return{root:{width:'100%',maxWidth:360,backgroundColor:theme.palette.background.paper}};});export default function ActiveBots(props){var classes=useStyles();var _React$useState=React.useState(['wifi']),_React$useState2=_slicedToArray(_React$useState,2),checked=_React$useState2[0],setChecked=_React$useState2[1];var handleToggle=function handleToggle(value){return function(){var currentIndex=checked.indexOf(value);var newChecked=_toConsumableArray(checked);if(currentIndex===-1){newChecked.push(value);}else{newChecked.splice(currentIndex,1);}setChecked(newChecked);};};return/*#__PURE__*/_jsx(List,{className:classes.root,children:props.bots.map(function(bot){return/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemText,{primary:'Strategy: '+bot.strategy,secondary:'status: '+bot.status}),/*#__PURE__*/_jsx(ListItemSecondaryAction,{children:/*#__PURE__*/_jsx(Switch,{edge:\"end\",onChange:handleToggle(bot.id),checked:checked.indexOf(bot.id)!==-1,inputProps:{'aria-labelledby':'switch-list-label-wifi'}})})]},bot.id);})});}","map":{"version":3,"sources":["/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/ActiveBots.js"],"names":["React","makeStyles","Switch","ListItemSecondaryAction","List","ListItem","ListItemText","ListItemAvatar","ListItemIcon","ImageIcon","WorkIcon","BeachAccessIcon","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","ActiveBots","props","classes","useState","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","bots","map","bot","strategy","status","id"],"mappings":"0bAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,UADJ,CAEIC,MAFJ,CAGIC,uBAHJ,KAIO,mBAJP,CAKA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,CAEA,GAAMC,CAAAA,SAAS,CAAGX,UAAU,CAAC,SAACY,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,KAAK,CAAE,MADH,CAEJC,QAAQ,CAAE,GAFN,CAGJC,eAAe,CAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC,KAHtC,CADiC,CAAZ,EAAD,CAA5B,CAQA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACxC,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CADwC,oBAEVZ,KAAK,CAACwB,QAAN,CAAe,CAAC,MAAD,CAAf,CAFU,oDAEjCC,OAFiC,qBAExBC,UAFwB,qBAIxC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,QAAW,WAAM,CACpC,GAAMC,CAAAA,YAAY,CAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB,CACA,GAAMG,CAAAA,UAAU,oBAAON,OAAP,CAAhB,CAEA,GAAII,YAAY,GAAK,CAAC,CAAtB,CAAyB,CACvBE,UAAU,CAACC,IAAX,CAAgBJ,KAAhB,EACD,CAFD,IAEO,CACLG,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,CAAgC,CAAhC,EACD,CAEDH,UAAU,CAACK,UAAD,CAAV,CACD,CAXoB,EAArB,CAaA,mBACE,KAAC,IAAD,EAAM,SAAS,CAAER,OAAO,CAACT,IAAzB,UACKQ,KAAK,CAACY,IAAN,CAAWC,GAAX,CAAe,SAACC,GAAD,qBACZ,MAAC,QAAD,yBACI,KAAC,YAAD,EACI,OAAO,CAAE,aAAeA,GAAG,CAACC,QADhC,CAEI,SAAS,CAAE,WAAaD,GAAG,CAACE,MAFhC,EADJ,cAKI,KAAC,uBAAD,wBACA,KAAC,MAAD,EACI,IAAI,CAAC,KADT,CAEI,QAAQ,CAAEX,YAAY,CAACS,GAAG,CAACG,EAAL,CAF1B,CAGI,OAAO,CAAEd,OAAO,CAACK,OAAR,CAAgBM,GAAG,CAACG,EAApB,IAA4B,CAAC,CAH1C,CAII,UAAU,CAAE,CAAE,kBAAmB,wBAArB,CAJhB,EADA,EALJ,GAAeH,GAAG,CAACG,EAAnB,CADY,EAAf,CADL,EADF,CAoBD","sourcesContent":["import React from 'react';\nimport {\n    makeStyles,\n    Switch,\n    ListItemSecondaryAction\n} from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ActiveBots(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(['wifi']);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <List className={classes.root}>\n        {props.bots.map((bot) => (\n            <ListItem key={bot.id}>\n                <ListItemText\n                    primary={'Strategy: ' + bot.strategy}\n                    secondary={'status: ' + bot.status}\n                />\n                <ListItemSecondaryAction>\n                <Switch\n                    edge=\"end\"\n                    onChange={handleToggle(bot.id)}\n                    checked={checked.indexOf(bot.id) !== -1}\n                    inputProps={{ 'aria-labelledby': 'switch-list-label-wifi' }}\n                />\n                </ListItemSecondaryAction>\n            </ListItem>\n        ))}\n    </List>\n  );\n}"]},"metadata":{},"sourceType":"module"}