{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Button,Grid}from'@material-ui/core';import ExchangeConnection from'./ExchangeConnection';import ExchangesTable from'./ExchangesTable';import ActiveBots from'./ActiveBots';import BotInterface from'./BotInterface';export default function Investments(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var exchanges_available=[{name:'crypto.com'}];/**\n     * bot status\n     * \n     * live-trader\n     * \n     * paper-trader\n     * \n     * backtest\n     * \n     */var strategies=['grid','pair','custom'];var bots=[{id:1,status:'live-trader',strategy:'grid',exchanges:['crypto.com'],volume:5,order_limit:1,sec_coins:[]// if empty choose from available in balance\n},{id:2,status:'live-trader',strategy:'pair',exchanges:['crypto.com'],volume:5,order_limit:1,sec_coins:[]// if empty choose from available in balance\n},{id:3,status:'live-trader',strategy:'custom',exchanges:['crypto.com'],volume:5,order_limit:1,sec_coins:[]// if empty choose from available in balance\n}];var sec_coins=['AAVE','ADA','LINK'];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Grid,{container:true,column:true,children:[/*#__PURE__*/_jsxs(Grid,{item:true,container:true,children:[/*#__PURE__*/_jsxs(Grid,{item:true,container:true,column:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(ExchangeConnection,{exchanges_available:exchanges_available,authUser:props.authUser})}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(Button,{onClick:handleClickOpen,children:\"Set your bot\"}),/*#__PURE__*/_jsx(BotInterface,{open:open,exchanges_available:exchanges_available,strategies:strategies,sec_coins:sec_coins,onClose:handleClose,handleClickOpen:handleClickOpen})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(ExchangesTable,{exchanges_available:exchanges_available,user:props.user,authUser:props.authUser})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(ActiveBots,{bots:bots})})]}),/*#__PURE__*/_jsxs(Grid,{item:true,container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:\"Total assets\"}),/*#__PURE__*/_jsx(Grid,{item:true,children:\"Total debt\"}),/*#__PURE__*/_jsx(Grid,{item:true,children:\"Net worth\"})]})]})});}","map":{"version":3,"sources":["/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/Investments.js"],"names":["React","Button","Grid","ExchangeConnection","ExchangesTable","ActiveBots","BotInterface","Investments","props","useState","open","setOpen","exchanges_available","name","strategies","bots","id","status","strategy","exchanges","volume","order_limit","sec_coins","handleClickOpen","handleClose","authUser","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    Grid\n} from '@material-ui/core';\nimport ExchangeConnection from './ExchangeConnection';\nimport ExchangesTable from './ExchangesTable';\nimport ActiveBots from './ActiveBots';\nimport BotInterface from './BotInterface';\n\nexport default function Investments(props) {\n\n    const [open, setOpen] = React.useState(false);\n\n    let exchanges_available = [{name: 'crypto.com'}];\n\n    /**\n     * bot status\n     * \n     * live-trader\n     * \n     * paper-trader\n     * \n     * backtest\n     * \n     */\n\n    let strategies = ['grid', 'pair', 'custom'];\n\n    let bots = [{\n        id: 1,\n        status: 'live-trader',\n        strategy: 'grid',\n        exchanges: ['crypto.com'],\n        volume: 5,\n        order_limit: 1,\n        sec_coins: [] // if empty choose from available in balance\n    },{\n        id: 2,\n        status: 'live-trader',\n        strategy: 'pair',\n        exchanges: ['crypto.com'],\n        volume: 5,\n        order_limit: 1,\n        sec_coins: [] // if empty choose from available in balance\n    },{\n        id: 3,\n        status: 'live-trader',\n        strategy: 'custom',\n        exchanges: ['crypto.com'],\n        volume: 5,\n        order_limit: 1,\n        sec_coins: [] // if empty choose from available in balance\n    }]\n\n    let sec_coins = ['AAVE', 'ADA', 'LINK'];\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Grid container column>\n                <Grid item container>\n                    <Grid item container column>\n                        <Grid item>\n                            <ExchangeConnection\n                                exchanges_available={exchanges_available}\n                                authUser={props.authUser}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                onClick={handleClickOpen}\n                            >Set your bot</Button>\n                            <BotInterface\n                                open={open}\n                                exchanges_available={exchanges_available}\n                                strategies={strategies}\n                                sec_coins={sec_coins}\n                                onClose={handleClose}\n                                handleClickOpen={handleClickOpen}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <ExchangesTable\n                            exchanges_available={exchanges_available}\n                            user={props.user}\n                            authUser={props.authUser}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <ActiveBots\n                            bots={bots}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item container>\n                    <Grid item>\n                        Total assets\n                    </Grid>\n                    <Grid item>\n                        Total debt\n                    </Grid>\n                    <Grid item>\n                        Net worth\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}