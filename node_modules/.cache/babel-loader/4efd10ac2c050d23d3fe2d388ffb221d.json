{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/ExchangeConnection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, Select, MenuItem, Checkbox, ListItemText, Input } from '@material-ui/core';\nimport axios from 'axios';\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nexport default function ExchangeConnection(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState();\n  const [exchanges, setExchanges] = React.useState([]);\n\n  const handleChangeExchanges = event => {\n    setExchanges(event.target.value);\n  };\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addExchange = async () => {\n    // TODO: add axios.post to write it on DB\n    const {\n      name,\n      api_sec,\n      api_pub\n    } = state; // TODO: handle multiple exchanges\n\n    let exchange = {\n      name: exchanges[0],\n      api_sec,\n      api_pub\n    };\n    const res = await axios.post('/users/add-exchange', exchange);\n    console.log(res.data);\n    props.authUser();\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Add exchange\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Add Exchange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Add your exchange api keys to connect your account.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-mutiple-checkbox-label\",\n                children: \"Exchanges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-mutiple-checkbox-label\",\n                id: \"demo-mutiple-checkbox\",\n                multiple: true,\n                value: exchanges,\n                onChange: handleChangeExchanges,\n                input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 40\n                }, this),\n                renderValue: selected => selected.join(', '),\n                MenuProps: MenuProps,\n                children: props.exchanges_available.map(exchange => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: exchange.name,\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: exchanges.indexOf(exchange.name) > -1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: exchange.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 33\n                  }, this)]\n                }, exchange.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\",\n              id: \"api_sec\",\n              label: \"api_sec\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\",\n              id: \"api_pub\",\n              label: \"api_pub\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addExchange,\n          color: \"primary\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ExchangeConnection, \"qNgyPP0+vC4cTrYc29OKCfcFOL8=\");\n\n_c = ExchangeConnection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExchangeConnection\");","map":{"version":3,"sources":["/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/ExchangeConnection.js"],"names":["React","Grid","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","InputLabel","Select","MenuItem","Checkbox","ListItemText","Input","axios","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","ExchangeConnection","props","open","setOpen","useState","state","setState","exchanges","setExchanges","handleChangeExchanges","event","target","value","handleChange","e","id","handleClickOpen","handleClose","addExchange","name","api_sec","api_pub","exchange","res","post","console","log","data","authUser","selected","join","exchanges_available","map","indexOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Grid,\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Checkbox,\n    ListItemText,\n    Input\n} from '@material-ui/core';\nimport axios from 'axios';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n        },\n    },\n};\n\nexport default function ExchangeConnection(props) {\n    const [open, setOpen] = React.useState(false);\n    const [state, setState] = React.useState();\n    const [exchanges, setExchanges] = React.useState([]);\n\n    const handleChangeExchanges = (event) => {\n        setExchanges(event.target.value);\n    };\n\n    const handleChange = (e) => {\n        setState({...state, [e.target.id]: e.target.value});\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const addExchange = async () => {\n        // TODO: add axios.post to write it on DB\n        const { name, api_sec, api_pub } = state;\n        // TODO: handle multiple exchanges\n        let exchange = {\n            name: exchanges[0],\n            api_sec,\n            api_pub\n        }\n        const res = await axios.post('/users/add-exchange', exchange);\n        console.log(res.data);\n        props.authUser();\n        handleClose();\n    }\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Add exchange\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Exchange</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Add your exchange api keys to connect your account.\n                    </DialogContentText>\n                    <Grid container>\n                        <Grid item>\n                        <FormControl>\n                            <InputLabel id=\"demo-mutiple-checkbox-label\">Exchanges</InputLabel>\n                            <Select\n                                labelId=\"demo-mutiple-checkbox-label\"\n                                id=\"demo-mutiple-checkbox\"\n                                multiple\n                                value={exchanges}\n                                onChange={handleChangeExchanges}\n                                input={<Input />}\n                                renderValue={(selected) => selected.join(', ')}\n                                MenuProps={MenuProps}\n                            >\n                            {props.exchanges_available.map((exchange) => (\n                                <MenuItem key={exchange.name} value={exchange.name}>\n                                <Checkbox checked={exchanges.indexOf(exchange.name) > -1} />\n                                <ListItemText primary={exchange.name} />\n                                </MenuItem>\n                            ))}\n                            </Select>\n                        </FormControl>\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"api_sec\"\n                                label=\"api_sec\"\n                                onChange={handleChange}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"api_pub\"\n                                label=\"api_pub\"\n                                onChange={handleChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={addExchange} color=\"primary\">\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}