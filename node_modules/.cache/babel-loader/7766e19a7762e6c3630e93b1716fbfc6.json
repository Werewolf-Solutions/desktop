{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/ActiveBots.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, Switch, ListItemSecondaryAction } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function ActiveBots(props) {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(['wifi']);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: props.bots.map(bot => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: 'Strategy: ' + bot.strategy,\n        secondary: 'status: ' + bot.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          edge: \"end\",\n          onChange: handleToggle(bot.id),\n          checked: checked.indexOf(bot.id) !== -1,\n          inputProps: {\n            'aria-labelledby': 'switch-list-label-wifi'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, bot.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ActiveBots, \"MvuJkMB7x4aWpeGnGFJ50nN0cSM=\", false, function () {\n  return [useStyles];\n});\n\n_c = ActiveBots;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveBots\");","map":{"version":3,"sources":["/home/lorenzo/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/ActiveBots.js"],"names":["React","makeStyles","Switch","ListItemSecondaryAction","List","ListItem","ListItemText","ListItemAvatar","ListItemIcon","ImageIcon","WorkIcon","BeachAccessIcon","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","ActiveBots","props","classes","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","bots","map","bot","strategy","status","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,EAEIC,MAFJ,EAGIC,uBAHJ,QAIO,mBAJP;AAKA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,MAAMC,SAAS,GAAGX,UAAU,CAAEY,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADiC,CAAZ,CAAD,CAA5B;AAQA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBzB,KAAK,CAAC0B,QAAN,CAAe,CAAC,MAAD,CAAf,CAA9B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW,MAAM;AACpC,UAAMC,YAAY,GAAGL,OAAO,CAACM,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGP,OAAJ,CAAnB;;AAEA,QAAIK,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDJ,IAAAA,UAAU,CAACM,UAAD,CAAV;AACD,GAXD;;AAaA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAER,OAAO,CAACT,IAAzB;AAAA,cACKQ,KAAK,CAACY,IAAN,CAAWC,GAAX,CAAgBC,GAAD,iBACZ,QAAC,QAAD;AAAA,8BACI,QAAC,YAAD;AACI,QAAA,OAAO,EAAE,eAAeA,GAAG,CAACC,QADhC;AAEI,QAAA,SAAS,EAAE,aAAaD,GAAG,CAACE;AAFhC;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,uBAAD;AAAA,+BACA,QAAC,MAAD;AACI,UAAA,IAAI,EAAC,KADT;AAEI,UAAA,QAAQ,EAAEX,YAAY,CAACS,GAAG,CAACG,EAAL,CAF1B;AAGI,UAAA,OAAO,EAAEf,OAAO,CAACM,OAAR,CAAgBM,GAAG,CAACG,EAApB,MAA4B,CAAC,CAH1C;AAII,UAAA,UAAU,EAAE;AAAE,+BAAmB;AAArB;AAJhB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,OAAeH,GAAG,CAACG,EAAnB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GArCuBlB,U;UACNT,S;;;KADMS,U","sourcesContent":["import React from 'react';\nimport {\n    makeStyles,\n    Switch,\n    ListItemSecondaryAction\n} from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ActiveBots(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(['wifi']);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <List className={classes.root}>\n        {props.bots.map((bot) => (\n            <ListItem key={bot.id}>\n                <ListItemText\n                    primary={'Strategy: ' + bot.strategy}\n                    secondary={'status: ' + bot.status}\n                />\n                <ListItemSecondaryAction>\n                <Switch\n                    edge=\"end\"\n                    onChange={handleToggle(bot.id)}\n                    checked={checked.indexOf(bot.id) !== -1}\n                    inputProps={{ 'aria-labelledby': 'switch-list-label-wifi' }}\n                />\n                </ListItemSecondaryAction>\n            </ListItem>\n        ))}\n    </List>\n  );\n}"]},"metadata":{},"sourceType":"module"}