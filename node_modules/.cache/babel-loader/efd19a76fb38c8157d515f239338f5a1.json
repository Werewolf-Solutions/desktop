{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/oznerol/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/BotInterface.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, Grid, TextField, FormControl, InputLabel, Select, MenuItem, ListItemText, Checkbox, Input, DialogActions, Button } from '@material-ui/core';\nimport axios from 'axios';\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nexport default function BotInterface(props) {\n  _s();\n\n  const {\n    onClose,\n    open\n  } = props;\n  const [exchanges, setExchanges] = React.useState([]);\n  const [strategies, setStrategies] = React.useState([]);\n  const [sec_coins, setSecCoins] = React.useState(props.sec_coins);\n  const [state, setState] = React.useState();\n\n  const handleChange = e => {\n    setState({ ...state,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleChangeExchanges = event => {\n    setExchanges(event.target.value);\n  };\n\n  const handleChangeStrategies = event => {\n    setStrategies(event.target.value);\n  };\n\n  const handleChangeSecCoins = event => {\n    setSecCoins(event.target.value);\n  };\n\n  const startBot = async () => {\n    // send bot obj to server and start bot\n    let {\n      volume,\n      order_limit,\n      threshold\n    } = state;\n    let obj = {\n      // COIN,\n      order_limit,\n      volume,\n      exchanges,\n      strategies,\n      sec_coins,\n      threshold\n    };\n    const res = await axios.post('/api/trading-bot', obj);\n    console.log(res.data);\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: onClose,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"simple-dialog-title\",\n        children: \"Set your bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Enter your custom variables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-mutiple-checkbox-label\",\n                children: \"Exchanges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-mutiple-checkbox-label\",\n                id: \"demo-mutiple-checkbox\",\n                multiple: true,\n                value: exchanges,\n                onChange: handleChangeExchanges,\n                input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 36\n                }, this),\n                renderValue: selected => selected.join(', '),\n                MenuProps: MenuProps,\n                children: props.exchanges_available.map(exchange => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: exchange.name,\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: exchanges.indexOf(exchange.name) > -1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: exchange.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 29\n                  }, this)]\n                }, exchange.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-mutiple-checkbox-label\",\n                children: \"Strategies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-mutiple-checkbox-label\",\n                id: \"demo-mutiple-checkbox\",\n                multiple: true,\n                value: strategies,\n                onChange: handleChangeStrategies,\n                input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 36\n                }, this),\n                renderValue: selected => selected.join(', '),\n                MenuProps: MenuProps,\n                children: props.strategies.map(strategy => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: strategy,\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: strategies.indexOf(strategy) > -1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: strategy\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 29\n                  }, this)]\n                }, strategy, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"volume\",\n              label: \"volume\",\n              type: \"volume\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"order_limit\",\n              label: \"order limit\",\n              type: \"order_limit\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-mutiple-checkbox-label\",\n                children: \"Secondary coins\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-mutiple-checkbox-label\",\n                id: \"demo-mutiple-checkbox\",\n                multiple: true,\n                value: sec_coins,\n                onChange: handleChangeSecCoins,\n                input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 36\n                }, this),\n                renderValue: selected => selected.join(', '),\n                MenuProps: MenuProps,\n                children: props.sec_coins.map(sec_coin => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: sec_coin,\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: sec_coins.indexOf(sec_coin) > -1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: sec_coin\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 29\n                  }, this)]\n                }, sec_coin, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"threshold\",\n              label: \"threshold\",\n              type: \"threshold\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: startBot,\n            color: \"primary\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BotInterface, \"HgKElqx0HhPx4zuYNPFOikI/s6Y=\");\n\n_c = BotInterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotInterface\");","map":{"version":3,"sources":["/home/oznerol/projects/werewolf-alpha/werewolf-desktop/src/Components/Investments/BotInterface.js"],"names":["React","Dialog","DialogContent","DialogContentText","DialogTitle","Grid","TextField","FormControl","InputLabel","Select","MenuItem","ListItemText","Checkbox","Input","DialogActions","Button","axios","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","BotInterface","props","onClose","open","exchanges","setExchanges","useState","strategies","setStrategies","sec_coins","setSecCoins","state","setState","handleChange","e","target","id","value","handleChangeExchanges","event","handleChangeStrategies","handleChangeSecCoins","startBot","volume","order_limit","threshold","obj","res","post","console","log","data","selected","join","exchanges_available","map","exchange","name","indexOf","strategy","sec_coin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Grid,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    ListItemText,\n    Checkbox,\n    Input,\n    DialogActions,\n    Button\n} from '@material-ui/core';\nimport axios from 'axios';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n        },\n    },\n};\n\nexport default function BotInterface(props) {\n    const { onClose, open } = props;\n\n    const [exchanges, setExchanges] = React.useState([]);\n    const [strategies, setStrategies] = React.useState([]);\n    const [sec_coins, setSecCoins] = React.useState(props.sec_coins);\n    const [state, setState] = React.useState();\n\n    const handleChange = (e) => {\n        setState({...state, [e.target.id]: e.target.value});\n    }\n\n    const handleChangeExchanges = (event) => {\n        setExchanges(event.target.value);\n    };\n\n    const handleChangeStrategies = (event) => {\n        setStrategies(event.target.value);\n    };\n\n    const handleChangeSecCoins = (event) => {\n        setSecCoins(event.target.value);\n    };\n\n    const startBot = async () => {\n        // send bot obj to server and start bot\n        let { volume, order_limit, threshold } = state;\n        let obj = {\n            // COIN,\n            order_limit,\n            volume,\n            exchanges,\n            strategies,\n            sec_coins,\n            threshold\n        };\n        const res = await axios.post('/api/trading-bot', obj);\n        console.log(res.data);\n        onClose();\n    }\n\n    return(\n        <div>\n            <Dialog onClose={onClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle id=\"simple-dialog-title\">Set your bot</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Enter your custom variables\n                </DialogContentText>\n                <Grid container>\n                    <Grid item>\n                    <FormControl>\n                        <InputLabel id=\"demo-mutiple-checkbox-label\">Exchanges</InputLabel>\n                        <Select\n                            labelId=\"demo-mutiple-checkbox-label\"\n                            id=\"demo-mutiple-checkbox\"\n                            multiple\n                            value={exchanges}\n                            onChange={handleChangeExchanges}\n                            input={<Input />}\n                            renderValue={(selected) => selected.join(', ')}\n                            MenuProps={MenuProps}\n                        >\n                        {props.exchanges_available.map((exchange) => (\n                            <MenuItem key={exchange.name} value={exchange.name}>\n                            <Checkbox checked={exchanges.indexOf(exchange.name) > -1} />\n                            <ListItemText primary={exchange.name} />\n                            </MenuItem>\n                        ))}\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item>\n                    <FormControl>\n                        <InputLabel id=\"demo-mutiple-checkbox-label\">Strategies</InputLabel>\n                        <Select\n                            labelId=\"demo-mutiple-checkbox-label\"\n                            id=\"demo-mutiple-checkbox\"\n                            multiple\n                            value={strategies}\n                            onChange={handleChangeStrategies}\n                            input={<Input />}\n                            renderValue={(selected) => selected.join(', ')}\n                            MenuProps={MenuProps}\n                        >\n                        {props.strategies.map((strategy) => (\n                            <MenuItem key={strategy} value={strategy}>\n                            <Checkbox checked={strategies.indexOf(strategy) > -1} />\n                            <ListItemText primary={strategy} />\n                            </MenuItem>\n                        ))}\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <TextField \n                            id=\"volume\"\n                            label=\"volume\"\n                            type=\"volume\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField \n                            id=\"order_limit\"\n                            label=\"order limit\"\n                            type=\"order_limit\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item>\n                    <FormControl>\n                        <InputLabel id=\"demo-mutiple-checkbox-label\">Secondary coins</InputLabel>\n                        <Select\n                            labelId=\"demo-mutiple-checkbox-label\"\n                            id=\"demo-mutiple-checkbox\"\n                            multiple\n                            value={sec_coins}\n                            onChange={handleChangeSecCoins}\n                            input={<Input />}\n                            renderValue={(selected) => selected.join(', ')}\n                            MenuProps={MenuProps}\n                        >\n                        {props.sec_coins.map((sec_coin) => (\n                            <MenuItem key={sec_coin} value={sec_coin}>\n                            <Checkbox checked={sec_coins.indexOf(sec_coin) > -1} />\n                            <ListItemText primary={sec_coin} />\n                            </MenuItem>\n                        ))}\n                        </Select>\n                    </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <TextField \n                            id=\"threshold\"\n                            label=\"threshold\"\n                            type=\"threshold\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                </Grid>\n                <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={startBot} color=\"primary\">\n                    Confirm\n                </Button>\n                </DialogActions>\n            </DialogContent>\n            </Dialog>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}